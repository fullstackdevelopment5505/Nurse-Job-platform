{"ast":null,"code":"var _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\widgets\\\\QuickStatsChart.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js\";\nimport { useSelector } from \"react-redux\";\nimport { metronic } from \"../../_metronic\";\nexport default function QuickStatsChart(_ref) {\n  var value = _ref.value,\n      desc = _ref.desc,\n      data = _ref.data,\n      color = _ref.color,\n      border = _ref.border;\n  var canvasRef = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      pointHoverBackgroundColor: metronic.builder.selectors.getConfig(state, \"colors.state.danger\")\n    };\n  }),\n      pointHoverBackgroundColor = _useSelector.pointHoverBackgroundColor;\n\n  useEffect(function () {\n    var config = {\n      type: \"line\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\n        datasets: [{\n          label: \"\",\n          borderColor: color,\n          borderWidth: border,\n          pointHoverBackgroundColor: pointHoverBackgroundColor,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 12,\n          pointBackgroundColor: Chart.helpers.color(\"#000000\").alpha(0).rgbString(),\n          pointBorderColor: Chart.helpers.color(\"#000000\").alpha(0).rgbString(),\n          pointHoverBorderColor: Chart.helpers.color(\"#000000\").alpha(0.1).rgbString(),\n          fill: false,\n          data: data\n        }]\n      },\n      options: {\n        title: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          intersect: false,\n          mode: \"nearest\",\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10\n        },\n        legend: {\n          display: false,\n          labels: {\n            usePointStyle: false\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: true,\n        hover: {\n          mode: \"ErrorsPage.js\"\n        },\n        scales: {\n          xAxes: [{\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: \"Month\"\n            }\n          }],\n          yAxes: [{\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: \"Value\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 4,\n            borderWidth: 12\n          }\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 10,\n            top: 5,\n            bottom: 0\n          }\n        }\n      }\n    };\n    var chart = new Chart(canvasRef.current, config);\n    return function () {\n      chart.destroy();\n    };\n  }, [data, color, border, pointHoverBackgroundColor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-widget26\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-widget26__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-widget26__number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, value), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-widget26__desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, desc)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-widget26__chart\",\n    style: {\n      width: \"230px\",\n      height: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    id: \"kt_chart_quick_stats_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/widgets/QuickStatsChart.js"],"names":["React","useEffect","useRef","Chart","useSelector","metronic","QuickStatsChart","value","desc","data","color","border","canvasRef","state","pointHoverBackgroundColor","builder","selectors","getConfig","config","type","labels","datasets","label","borderColor","borderWidth","pointHoverRadius","pointHoverBorderWidth","pointBackgroundColor","helpers","alpha","rgbString","pointBorderColor","pointHoverBorderColor","fill","options","title","display","tooltips","enabled","intersect","mode","xPadding","yPadding","caretPadding","legend","usePointStyle","responsive","maintainAspectRatio","hover","scales","xAxes","gridLines","scaleLabel","labelString","yAxes","ticks","beginAtZero","elements","point","radius","layout","padding","left","right","top","bottom","chart","current","destroy","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { metronic } from \"../../_metronic\";\r\n\r\nexport default function QuickStatsChart({\r\n  value,\r\n  desc,\r\n\r\n  // array of numbers\r\n  data,\r\n  // chart line color\r\n  color,\r\n  // chart line size\r\n  border\r\n}) {\r\n  const canvasRef = useRef();\r\n  const { pointHoverBackgroundColor } = useSelector(state => ({\r\n    pointHoverBackgroundColor: metronic.builder.selectors.getConfig(\r\n      state,\r\n      \"colors.state.danger\"\r\n    )\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\"\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"\",\r\n            borderColor: color,\r\n            borderWidth: border,\r\n            pointHoverBackgroundColor,\r\n\r\n            pointHoverRadius: 4,\r\n            pointHoverBorderWidth: 12,\r\n            pointBackgroundColor: Chart.helpers\r\n              .color(\"#000000\")\r\n              .alpha(0)\r\n              .rgbString(),\r\n            pointBorderColor: Chart.helpers\r\n              .color(\"#000000\")\r\n              .alpha(0)\r\n              .rgbString(),\r\n\r\n            pointHoverBorderColor: Chart.helpers\r\n              .color(\"#000000\")\r\n              .alpha(0.1)\r\n              .rgbString(),\r\n            fill: false,\r\n            data: data\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: false\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n          intersect: false,\r\n          mode: \"nearest\",\r\n          xPadding: 10,\r\n          yPadding: 10,\r\n          caretPadding: 10\r\n        },\r\n        legend: {\r\n          display: false,\r\n          labels: {\r\n            usePointStyle: false\r\n          }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        hover: {\r\n          mode: \"ErrorsPage.js\"\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n              gridLines: false,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Month\"\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n              gridLines: false,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Value\"\r\n              },\r\n              ticks: {\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          ]\r\n        },\r\n\r\n        elements: {\r\n          point: {\r\n            radius: 4,\r\n            borderWidth: 12\r\n          }\r\n        },\r\n\r\n        layout: {\r\n          padding: {\r\n            left: 0,\r\n            right: 10,\r\n            top: 5,\r\n            bottom: 0\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const chart = new Chart(canvasRef.current, config);\r\n\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, [data, color, border, pointHoverBackgroundColor]);\r\n\r\n  return (\r\n    <div className=\"kt-widget26\">\r\n      <div className=\"kt-widget26__content\">\r\n        <span className=\"kt-widget26__number\">{value}</span>\r\n        <span className=\"kt-widget26__desc\">{desc}</span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"kt-widget26__chart\"\r\n        style={{ width: \"230px\", height: \"100px\" }}\r\n      >\r\n        <canvas ref={canvasRef} id=\"kt_chart_quick_stats_1\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}