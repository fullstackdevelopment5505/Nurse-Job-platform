{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport * as routerHelpers from \"../../router/RouterHelpers\";\nexport var actionTypes = {\n  AllActivities: \"[AllActivities] Action\",\n  Logout: \"[Logout] Action\"\n};\nvar initialActivityState = {\n  activities: []\n};\nexport var activityReducer = function activityReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialActivityState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AllActivities:\n      {\n        var activities = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activities: activities\n        });\n      }\n\n    case actionTypes.Logout:\n      {\n        return initialActivityState;\n      }\n\n    default:\n      return state;\n  }\n}; // );\n\nexport var actions = {\n  allActivities: function allActivities(activities) {\n    return {\n      type: actionTypes.AllActivities,\n      payload: activities\n    };\n  },\n  logout: function logout() {\n    return {\n      type: actionTypes.Logout\n    };\n  }\n};\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/store/ducks/activity.duck.js"],"names":["saga","routerHelpers","actionTypes","AllActivities","Logout","initialActivityState","activities","activityReducer","state","action","type","payload","actions","allActivities","logout"],"mappings":";;;oDAiCiBA,I;;AAjCjB,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,aAAa,EAAG,wBADS;AAEzBC,EAAAA,MAAM,EAAG;AAFgB,CAApB;AAKP,IAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,UAAU,EAAE;AADe,CAA7B;AAIA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA0C;AAAA,MAAzCC,KAAyC,uEAAjCH,oBAAiC;AAAA,MAAXI,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACC,aAAjB;AAAgC;AAC9B,YAAMG,UAAU,GAAGG,MAAM,CAACE,OAA1B;AACA,+CAAYH,KAAZ;AAAmBF,UAAAA,UAAU,EAAEA;AAA/B;AACD;;AAED,SAAKJ,WAAW,CAACE,MAAjB;AAAyB;AACvB,eAAOC,oBAAP;AACD;;AAED;AACE,aAAOG,KAAP;AAXJ;AAaD,CAdI,C,CAeP;;AAEA,OAAO,IAAMI,OAAO,GAAG;AACrBC,EAAAA,aAAa,EAAE,uBAAAP,UAAU;AAAA,WAAK;AAAEI,MAAAA,IAAI,EAAER,WAAW,CAACC,aAApB;AAAmCQ,MAAAA,OAAO,EAAEL;AAA5C,KAAL;AAAA,GADJ;AAErBQ,EAAAA,MAAM,EAAE;AAAA,WAAO;AAAEJ,MAAAA,IAAI,EAAER,WAAW,CAACE;AAApB,KAAP;AAAA;AAFa,CAAhB;AAKP,OAAO,SAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as routerHelpers from \"../../router/RouterHelpers\";\r\n\r\nexport const actionTypes = {\r\n  AllActivities : \"[AllActivities] Action\",\r\n  Logout : \"[Logout] Action\",\r\n};\r\n\r\nconst initialActivityState = {\r\n  activities: [],\r\n};\r\n\r\nexport const activityReducer = (state = initialActivityState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.AllActivities: {\r\n        const activities = action.payload;\r\n        return { ...state, activities: activities };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        return initialActivityState;\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n// );\r\n\r\nexport const actions = {\r\n  allActivities: activities => ({ type: actionTypes.AllActivities, payload: activities }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n};\r\n\r\nexport function* saga() {\r\n  // yield takeLatest(actionTypes.AllUsers, function* allUsersSaga() {\r\n  //   yield put(actions.allUsers());\r\n  // });\r\n\r\n  // yield takeLatest(actionTypes.AddUser, function* addUserSaga() {\r\n  //   yield put(actions.addUser());\r\n  // });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}