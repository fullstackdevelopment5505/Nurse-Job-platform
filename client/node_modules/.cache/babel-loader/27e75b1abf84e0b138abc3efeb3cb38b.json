{"ast":null,"code":"import _defineProperty from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\nurse\\\\auth\\\\AuthPage.js\";\n\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport clsx from \"clsx\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MySnackbarContentWrapper from './../../pages/home/MySnackBar';\nimport { TextField } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { //     fade,\nwithStyles, makeStyles //     createMuiTheme\n} from \"@material-ui/core/styles\"; // import { ThemeProvider } from \"@material-ui/styles\";\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox'; // import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Favorite from '@material-ui/icons/Favorite';\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport './AuthPage.scss';\nimport Header from \"../layout/Header\";\nimport BradCrumb from '../layout/BreadCrumb';\nimport Footer from \"../layout/Footer\";\nimport * as actions from '../../actions';\nimport * as authDuck from \"../../store/ducks/auth.duck\";\nimport * as userDuck from \"../../store/ducks/user.duck\";\nvar GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(function (props) {\n  return /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n});\n\nfunction AuthPage(props) {\n  var _this2 = this;\n\n  // const { intl } = props;\n  var history = useHistory();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      addsnack = _React$useState2[0],\n      setAddsnack = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Added Succesfully!\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      snackcontent = _React$useState4[0],\n      setSnackcontent = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      forgetflag = _React$useState6[0],\n      setForgetflag = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      state = _React$useState8[0],\n      setState = _React$useState8[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    paddingRight: \"2.5rem\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingButtonStyle = _useState4[0],\n      setLoadingButtonStyle = _useState4[1];\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n    setLoadingButtonStyle({\n      paddingRight: \"3.5rem\"\n    });\n  };\n\n  function handleAddsnackClose() {\n    setAddsnack(false);\n  }\n\n  function handleAddsnackClick() {\n    setAddsnack(true);\n  }\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n    setLoadingButtonStyle({\n      paddingRight: \"2.5rem\"\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      container: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      textField: {\n        marginLeft: theme.spacing(0),\n        marginRight: theme.spacing(0),\n        marginTop: '8px',\n        marginBottom: '8px'\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      termps_check: {\n        marginRight: '3px'\n      }\n    };\n  });\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BradCrumb, {\n    title: \"Login\",\n    base: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"authPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, !forgetflag ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = 'You have to input all the fields correctly';\n      }\n\n      if (!values.password) {\n        errors.password = 'You have to input all the fields correctly';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      //console.log('===  data 1 == ')\n      enableLoading();\n      setTimeout(function () {\n        actions.userlogin(values).then(function (res) {\n          disableLoading();\n          var data = res.data; //console.log('===  data  == ')\n          //console.log(res)\n\n          if (!data.success) {\n            setSubmitting(false);\n            setStatus(data.errMessage);\n            return;\n          } else {\n            setStatus('');\n            setSnackcontent('Login In Succesfully');\n            setSubmitting(false);\n            handleAddsnackClick();\n            props.userlogin(data); // history.push(\"/home\");\n\n            if (props.role === 2) history.push(\"/jobs\");else history.push('/myprofile/overview');\n          }\n        }).catch(function () {\n          //console.log('===  data2  == ')\n          disableLoading();\n          setSubmitting(false);\n          setStatus('Error!!! you have to check your Database or Connection');\n        });\n      }, 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        status = _ref2.status,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"kt-form\",\n      onSubmit: handleSubmit,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      placeholder: \"Email\",\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.email,\n      helperText: touched.email && errors.email,\n      error: Boolean(touched.email && errors.email),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"password\",\n      placeholder: \"Password\",\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.password,\n      helperText: touched.password && errors.password,\n      error: Boolean(touched.password && errors.password),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n        checked: state.checkedB,\n        onChange: handleChange('checkedB'),\n        value: \"checkedB\",\n        color: \"primary\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }),\n      label: \"Keep me signed in\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      style: {\n        textAlign: 'right',\n        margin: '10px 0px'\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"back-link\",\n      title: \"Forgot Password\",\n      onClick: function onClick() {\n        setForgetflag(true);\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 31\n      }\n    }, \"Lost Your Password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row login-form-submit\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-theme-second btn-block \".concat(clsx({\n        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n      })),\n      style: loadingButtonStyle,\n      name: \"submit\",\n      value: \"Sign In\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-account text-center\",\n      style: {\n        width: '100%'\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 27\n      }\n    }, \"Don\\u2019t Have an Account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      className: \"create\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 54\n      }\n    }, \"Create\"))));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 reset-password mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-info-user text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"des\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 23\n    }\n  }, \"Please Enter Email\")), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-bare\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    placeholder: \"Email\",\n    inputProps: {\n      \"aria-label\": \"bare\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row login-form-submit\",\n    style: {\n      marginTop: '6px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-theme-second btn-block\",\n    name: \"submit\",\n    value: \"Get New Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-account text-center\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"back-link\",\n    onClick: function onClick() {\n      setForgetflag(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 30\n    }\n  }, \"Back To Login\")))))))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: addsnack,\n    autoHideDuration: 6000,\n    onClose: handleAddsnackClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    onClose: handleAddsnackClose,\n    variant: \"success\",\n    message: snackcontent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    role: state.auth.role\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, _objectSpread(_objectSpread({}, authDuck.actions), userDuck.actions) // auth.actions\n)(AuthPage));","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/nurse/auth/AuthPage.js"],"names":["React","useState","Formik","connect","useHistory","Link","injectIntl","clsx","Snackbar","MySnackbarContentWrapper","TextField","green","withStyles","makeStyles","FormGroup","FormControlLabel","Checkbox","Header","BradCrumb","Footer","actions","authDuck","userDuck","GreenCheckbox","root","color","checked","props","AuthPage","history","addsnack","setAddsnack","snackcontent","setSnackcontent","forgetflag","setForgetflag","checkedA","checkedB","checkedF","checkedG","state","setState","loading","setLoading","paddingRight","loadingButtonStyle","setLoadingButtonStyle","enableLoading","handleAddsnackClose","handleAddsnackClick","disableLoading","handleChange","name","event","target","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","marginTop","marginBottom","dense","menu","width","termps_check","classes","backgroundColor","email","password","values","errors","setStatus","setSubmitting","setTimeout","userlogin","then","res","data","success","errMessage","role","push","catch","status","touched","handleBlur","handleSubmit","isSubmitting","Boolean","textAlign","margin","vertical","horizontal","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { useHistory , Link} from \"react-router-dom\";\n\nimport { injectIntl } from \"react-intl\";\nimport clsx from \"clsx\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MySnackbarContentWrapper from './../../pages/home/MySnackBar';\nimport {\n    TextField,\n  } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport {\n//     fade,\n    withStyles,\n    makeStyles,\n//     createMuiTheme\n  } from \"@material-ui/core/styles\";\n// import { ThemeProvider } from \"@material-ui/styles\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Favorite from '@material-ui/icons/Favorite';\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport './AuthPage.scss';\nimport Header from \"../layout/Header\";\nimport BradCrumb from '../layout/BreadCrumb';\nimport Footer from \"../layout/Footer\";\nimport * as actions from '../../actions';\nimport * as authDuck from \"../../store/ducks/auth.duck\";\nimport * as userDuck from \"../../store/ducks/user.duck\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\n function AuthPage(props){\n  // const { intl } = props;\n  const history = useHistory();\n  const [addsnack, setAddsnack] = React.useState(false);\n  const [snackcontent, setSnackcontent] = React.useState(\"Added Succesfully!\");\n  const [forgetflag,setForgetflag] = React.useState(false);\nconst [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n  const [loading, setLoading] = useState(false);\n  const [loadingButtonStyle, setLoadingButtonStyle] = useState({\n    paddingRight: \"2.5rem\"\n  });\n  const enableLoading = () => {\n    setLoading(true);\n    setLoadingButtonStyle({ paddingRight: \"3.5rem\" });\n  };\n  function handleAddsnackClose() {\n    setAddsnack(false);\n\n  }\n  function handleAddsnackClick(){\n    setAddsnack(true)\n  }\n\n  const disableLoading = () => {\n    setLoading(false);\n    setLoadingButtonStyle({ paddingRight: \"2.5rem\" });\n  };\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\nconst useStyles = makeStyles(theme => ({\n      container: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      textField: {\n        marginLeft: theme.spacing(0),\n        marginRight: theme.spacing(0),\n        marginTop: '8px',\n        marginBottom: '8px',\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      termps_check:{\n        marginRight:'3px'\n      }\n    }));\n    const classes = useStyles();\n    return (\n      <>\n        <Header/>\n        <BradCrumb title=\"Login\" base=\"Home\"/>\n        <section style={{backgroundColor:'white'}} className=\"authPage\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {!forgetflag\n              ?<div className=\"col-md-6 mx-auto\">\n                    <h3 className=\"title\">Sign In</h3>\n                   \n                    <div className=\"col-md-12\">\n                    <Formik\n                      initialValues={{\n                        email: \"\",\n                        password: \"\"\n                      }}\n                  validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                      errors.email = 'You have to input all the fields correctly'\n                    }\n                    if (!values.password) {\n                      errors.password = 'You have to input all the fields correctly'\n                    }\n                    return errors;\n                  }}\n                  onSubmit={(values, { setStatus, setSubmitting }) => {\n                    //console.log('===  data 1 == ')\n                    enableLoading();\n                    setTimeout(() => {\n                      actions.userlogin(values)\n                        .then(res => {\n                          disableLoading();\n                          let {data} = res;\n                          //console.log('===  data  == ')\n                          //console.log(res)\n                          if(!data.success) {\n                            setSubmitting(false)\n                            setStatus(\n                              data.errMessage\n                            );\n                            return;\n                          }\n                          else{\n                            setStatus('')\n                            setSnackcontent('Login In Succesfully')\n                            setSubmitting(false)\n                            handleAddsnackClick()\n                            props.userlogin(data);\n                            // history.push(\"/home\");\n                            if(props.role === 2)  \n                              history.push(\"/jobs\");\n                            else\n                              history.push('/myprofile/overview')\n                          }\n                        })\n                        .catch(() => {\n                          //console.log('===  data2  == ')\n                          disableLoading();\n                          setSubmitting(false);\n                          setStatus(\n                            'Error!!! you have to check your Database or Connection'\n                          );\n                        });\n                    }, 1000);\n                  }}\n                >\n                  {({\n                    values,\n                    status,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }) => (\n                      <form\n                        noValidate={true}\n                        autoComplete=\"off\"\n                        className=\"kt-form\"\n                        onSubmit={handleSubmit}\n                      >\n                         {/* {status !== '' ?<div className=\"sign-in-demo-notice\">\n                          {status}\n                        </div>:<div></div>} */}\n                        {status ? (\n                              <div role=\"alert\" className=\"alert alert-danger\">\n                                <div className=\"alert-text\">{status}</div>\n                              </div>\n                            ) : (\n                              <div></div>\n                            )}\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder=\"Email\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.email}\n                            helperText={touched.email && errors.email}\n                            error={Boolean(touched.email && errors.email)}\n                        />\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.password}\n                            helperText={touched.password && errors.password}\n                            error={Boolean(touched.password && errors.password)}\n                        />\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                              <FormControlLabel\n                              control={\n                                <GreenCheckbox\n                                  checked={state.checkedB}\n                                  onChange={handleChange('checkedB')}\n                                  value=\"checkedB\"\n                                  color=\"primary\"\n                                />\n                              }\n                              label=\"Keep me signed in\"\n                            />\n                          </div>\n                          <div className=\"col-md-6\" style={{textAlign:'right',margin:'10px 0px'}}>\n                              <a className=\"back-link\" title=\"Forgot Password\" onClick={() => {\n                                    setForgetflag(true);\n                                  }}>Lost Your Password?</a>\n                          </div>\n                        </div>\n                        <div className=\"row login-form-submit\">\n                          <input type=\"submit\" className={`btn btn-theme-second btn-block ${clsx(\n                            {\n                              \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n                            }\n                          )}`}\n                          style={loadingButtonStyle} name=\"submit\" value=\"Sign In\"/>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"create-account text-center\" style={{width:'100%'}}>\n                              Don’t Have an Account? <Link to=\"/register\" className=\"create\">Create</Link>\n                          </div>\n                        </div>\n                      </form> )}\n                      </Formik>\n                    </div>\n                </div>\n              :<div className=\"col-md-6 reset-password mx-auto\">\n                    <div className=\"top-info-user text-center\">\n                      <h3 className=\"title\">Reset Password</h3>\n                      <div className=\"des\">Please Enter Email</div>\n                    </div>\n                    <FormGroup row>\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder=\"Email\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                        />\n                        <div className=\"row login-form-submit\" style={{marginTop:'6px'}}>\n                          <input type=\"submit\" className=\"btn btn-theme-second btn-block\" name=\"submit\" value=\"Get New Password\"/>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"create-account text-center\" style={{width:'100%'}}>\n                             <a className=\"back-link\" onClick={() => {\n                                    setForgetflag(false);\n                                  }}>Back To Login</a>\n                          </div>\n                        </div>\n                    </FormGroup>\n              </div>\n              }\n            </div>\n          </div>\n          </section>\n          <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={addsnack}\n          autoHideDuration={6000}\n          onClose={handleAddsnackClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={handleAddsnackClose}\n            variant={\"success\"}\n            message={snackcontent}\n          />\n        </Snackbar>\n        <Footer/>\n      </>\n    );\n}\nconst mapStateToProps = (state) => ({\n  role:state.auth.role\n})\nexport default injectIntl(\n  connect(\n    mapStateToProps,\n    {...authDuck.actions, ...userDuck.actions}\n    // auth.actions\n  )(AuthPage)\n);\n"]},"metadata":{},"sourceType":"module"}