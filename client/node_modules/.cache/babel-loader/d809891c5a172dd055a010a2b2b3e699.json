{"ast":null,"code":"import _defineProperty from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\nurse\\\\auth\\\\AuthPageRegister.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport clsx from \"clsx\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MySnackbarContentWrapper from './../../pages/home/MySnackBar';\nimport { TextField } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { //     fade,\nwithStyles, makeStyles //     createMuiTheme\n} from \"@material-ui/core/styles\"; // import { ThemeProvider } from \"@material-ui/styles\";\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox'; // import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Favorite from '@material-ui/icons/Favorite';\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport './AuthPage.scss';\nimport Header from \"../layout/Header\";\nimport BradCrumb from '../layout/BreadCrumb';\nimport Footer from \"../layout/Footer\";\nimport * as actions from '../../actions';\nimport * as authDuck from \"../../store/ducks/auth.duck\";\nimport * as userDuck from \"../../store/ducks/user.duck\";\nimport * as categoryDuck from '../../store/ducks/category.duck';\nimport MenuItem from '@material-ui/core/MenuItem';\nvar GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(function (props) {\n  return /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n});\n\nfunction AuthPageRegister(props) {\n  var _this2 = this;\n\n  // const { intl } = props;\n  var history = useHistory();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryarr = _useState4[0],\n      setCategoryarr = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      addsnack = _React$useState2[0],\n      setAddsnack = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Nurse\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      account = _React$useState4[0],\n      setAccount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"Added Succesfully!\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      snackcontent = _React$useState6[0],\n      setSnackcontent = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      state = _React$useState8[0],\n      setState = _React$useState8[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState({\n    paddingRight: \"2.5rem\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadingButtonStyle = _useState8[0],\n      setLoadingButtonStyle = _useState8[1];\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n    setLoadingButtonStyle({\n      paddingRight: \"3.5rem\"\n    });\n  };\n\n  function handleAddsnackClose() {\n    setAddsnack(false);\n  }\n\n  function handleAddsnackClick() {\n    setAddsnack(true);\n  }\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n    setLoadingButtonStyle({\n      paddingRight: \"2.5rem\"\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n\n  useEffect(function () {\n    setCategoryarr(props.allcategories);\n    setCategory(props.allcategories[0]._id);\n  }, [props]);\n  var useStyles = makeStyles(function (theme) {\n    return {\n      container: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      textField: {\n        marginLeft: theme.spacing(0),\n        marginRight: theme.spacing(0),\n        marginTop: '8px',\n        marginBottom: '8px'\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      termps_check: {\n        marginRight: '3px'\n      }\n    };\n  });\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BradCrumb, {\n    title: \"Register\",\n    base: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"authPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6  mx-auto register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Create an Account\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      phoneNumber: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.firstName) {\n        errors.firstName = 'You have to input all the fields correctly';\n      }\n\n      if (!values.lastName) {\n        errors.lastName = 'You have to input all the fields correctly';\n      }\n\n      if (!values.email) {\n        errors.email = 'You have to input all the fields correctly';\n      }\n\n      if (!values.password) {\n        errors.password = 'You have to input all the fields correctly';\n      }\n\n      if (!values.phoneNumber) {\n        errors.phoneNumber = 'You have to input all the fields correctly';\n      }\n\n      if (values.confirmpassword !== values.password) {\n        errors.password = 'You have to input same Password & Confirm';\n        errors.confirmpassword = 'You have to input same Password & Confirm';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      //console.log('===  data 1 == ')\n      enableLoading();\n      setTimeout(function () {\n        if (account === 'Nurse') {\n          actions.addNurse(values).then(function (res) {\n            disableLoading();\n            var data = res.data; //console.log('===  data  == ')\n            //console.log(res)\n\n            if (!data.success) {\n              setSubmitting(false);\n              setStatus(data.errMessage);\n              return;\n            } else {\n              setStatus('');\n              setSubmitting(false);\n              setSnackcontent('Added Succesfully!');\n              handleAddsnackClick();\n              props.allNurses(data.nurses);\n            }\n          }).catch(function () {\n            //console.log('===  data2  == ')\n            disableLoading();\n            setSubmitting(false);\n            setStatus('Error!!! you have to check your Database or Connection');\n          });\n        } else {\n          actions.addClient(values).then(function (res) {\n            disableLoading();\n            var data = res.data; //console.log('===  data  == ')\n            //console.log(res)\n\n            if (!data.success) {\n              setSubmitting(false);\n              setStatus(data.errMessage);\n              return;\n            } else {\n              setStatus('');\n              setSubmitting(false);\n              setSnackcontent('Added Succesfully!');\n              handleAddsnackClick();\n              props.allClients(data.clients);\n            }\n          }).catch(function () {\n            //console.log('===  data2  == ')\n            disableLoading();\n            setSubmitting(false);\n            setStatus('Error!!! you have to check your Database or Connection');\n          });\n        }\n      }, 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        status = _ref2.status,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"kt-form\",\n      onSubmit: handleSubmit,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"role-tabs flex-middle\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"Square \".concat(account == 'Nurse' ? \"active\" : \"\"),\n      onClick: function onClick() {\n        setAccount('Nurse');\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"cadidate\",\n      type: \"radio\",\n      name: \"role\",\n      value: \"wp_job_board_candidate\",\n      defaultChecked: true,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cadidate\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 126\n      }\n    }, \"Nurse\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"Square \".concat(account != 'Nurse' ? \"active\" : \"\"),\n      onClick: function onClick() {\n        setAccount('Vendor');\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"employer\",\n      name: \"role\",\n      value: \"wp_job_board_employer\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"employer\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 110\n      }\n    }, \"Employer\")))), account == 'Nurse' ? /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-select-currency\",\n      select: true,\n      className: classes.textField,\n      value: category,\n      onChange: function onChange(e) {\n        return setCategory(e.target.value);\n      },\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      helperText: \"Please select your currency\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, categoryarr.map(function (option) {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: option._id,\n        value: option._id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 31\n        }\n      }, option.name);\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      placeholder: account == 'Nurse' ? \"Firstname *\" : 'Facility Name',\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"firstName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.firstName,\n      helperText: touched.firstName && errors.firstName,\n      error: Boolean(touched.firstName && errors.firstName),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      placeholder: account == 'Nurse' ? \"Lastname *\" : 'Address',\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"lastName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.lastName,\n      helperText: touched.lastName && errors.lastName,\n      error: Boolean(touched.lastName && errors.lastName),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      placeholder: \"Email *\",\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.email,\n      helperText: touched.email && errors.email,\n      error: Boolean(touched.email && errors.email),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      placeholder: \"Phone Number\",\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"phoneNumber\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.phoneNumber,\n      helperText: touched.phoneNumber && errors.phoneNumber,\n      error: Boolean(touched.phoneNumber && errors.phoneNumber),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"password\",\n      placeholder: \"Password *\",\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.password,\n      helperText: touched.password && errors.password,\n      error: Boolean(touched.password && errors.password),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-bare\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"password\",\n      placeholder: \"Confirm Password *\",\n      inputProps: {\n        \"aria-label\": \"bare\"\n      },\n      name: \"confirmpassword\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.confirmpassword,\n      helperText: touched.confirmpassword && errors.confirmpassword,\n      error: Boolean(touched.confirmpassword && errors.confirmpassword),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n        checked: state.checkedB,\n        onChange: handleChange('checkedB'),\n        value: \"checkedB\",\n        color: \"primary\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 33\n        }\n      }),\n      label: \"You accept our\",\n      className: classes.termps_check,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"terms_link\",\n      href: \"#forgot-password-form-wrapper\",\n      title: \"Forgot Password\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, \"Terms and Conditions and Privacy Policy\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row login-form-submit\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-theme-second btn-block \".concat(clsx({\n        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n      })),\n      style: loadingButtonStyle,\n      name: \"submit\",\n      value: \"Register Now\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-account text-center\",\n      style: {\n        width: '100%'\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 27\n      }\n    }, \"Already Have an Account?  \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      className: \"create\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 53\n      }\n    }, \"Sign In\"))));\n  }))))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: addsnack,\n    autoHideDuration: 6000,\n    onClose: handleAddsnackClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    onClose: handleAddsnackClose,\n    variant: \"success\",\n    message: snackcontent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    role: state.auth.role,\n    allcategories: state.category.allcategories\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, _objectSpread(_objectSpread(_objectSpread({}, authDuck.actions), userDuck.actions), categoryDuck.actions) // auth.actions\n)(AuthPageRegister));","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/nurse/auth/AuthPageRegister.js"],"names":["React","useState","useEffect","Formik","connect","useHistory","Link","injectIntl","clsx","Snackbar","MySnackbarContentWrapper","TextField","green","withStyles","makeStyles","FormGroup","FormControlLabel","Checkbox","Header","BradCrumb","Footer","actions","authDuck","userDuck","categoryDuck","MenuItem","GreenCheckbox","root","color","checked","props","AuthPageRegister","history","category","setCategory","categoryarr","setCategoryarr","addsnack","setAddsnack","account","setAccount","snackcontent","setSnackcontent","checkedA","checkedB","checkedF","checkedG","state","setState","loading","setLoading","paddingRight","loadingButtonStyle","setLoadingButtonStyle","enableLoading","handleAddsnackClose","handleAddsnackClick","disableLoading","handleChange","name","event","target","allcategories","_id","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","marginTop","marginBottom","dense","menu","width","termps_check","classes","backgroundColor","firstName","lastName","email","password","confirmpassword","phoneNumber","values","errors","setStatus","setSubmitting","setTimeout","addNurse","then","res","data","success","errMessage","allNurses","nurses","catch","addClient","allClients","clients","status","touched","handleBlur","handleSubmit","isSubmitting","e","value","MenuProps","className","map","option","Boolean","vertical","horizontal","mapStateToProps","role","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport { injectIntl } from \"react-intl\";\nimport clsx from \"clsx\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MySnackbarContentWrapper from './../../pages/home/MySnackBar';\nimport {\n    TextField,\n  } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport {\n//     fade,\n    withStyles,\n    makeStyles,\n//     createMuiTheme\n  } from \"@material-ui/core/styles\";\n// import { ThemeProvider } from \"@material-ui/styles\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Favorite from '@material-ui/icons/Favorite';\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport './AuthPage.scss';\nimport Header from \"../layout/Header\";\nimport BradCrumb from '../layout/BreadCrumb';\nimport Footer from \"../layout/Footer\";\nimport * as actions from '../../actions';\nimport * as authDuck from \"../../store/ducks/auth.duck\";\nimport * as userDuck from \"../../store/ducks/user.duck\";\nimport * as categoryDuck from '../../store/ducks/category.duck';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\n function AuthPageRegister(props){\n  // const { intl } = props;\n  const history = useHistory();\n  const [category, setCategory] = useState('');\n  const [categoryarr, setCategoryarr]=useState([]);\n   const [addsnack, setAddsnack] = React.useState(false);\n  const [account,setAccount] = React.useState(\"Nurse\");\n  const [snackcontent, setSnackcontent] = React.useState(\"Added Succesfully!\");\nconst [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n  const [loading, setLoading] = useState(false);\n  const [loadingButtonStyle, setLoadingButtonStyle] = useState({\n    paddingRight: \"2.5rem\"\n  });\n  const enableLoading = () => {\n    setLoading(true);\n    setLoadingButtonStyle({ paddingRight: \"3.5rem\" });\n  };\n  function handleAddsnackClose() {\n    setAddsnack(false);\n\n  }\n  function handleAddsnackClick(){\n    setAddsnack(true)\n  }\n\n  const disableLoading = () => {\n    setLoading(false);\n    setLoadingButtonStyle({ paddingRight: \"2.5rem\" });\n  };\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n  useEffect(() => {\n\t\tsetCategoryarr(props.allcategories);\n    setCategory(props.allcategories[0]._id);\n  }, [props])\n\nconst useStyles = makeStyles(theme => ({\n      container: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      textField: {\n        marginLeft: theme.spacing(0),\n        marginRight: theme.spacing(0),\n        marginTop: '8px',\n        marginBottom: '8px',\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      termps_check:{\n        marginRight:'3px'\n      }\n    }));\n    const classes = useStyles();\n    return (\n      <>\n        <Header/>\n        <BradCrumb title=\"Register\" base=\"Home\"/>\n        <section style={{backgroundColor:'white'}} className=\"authPage\">\n          <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-6  mx-auto register-form\">\n                    <h3 className=\"title\">Create an Account</h3>\n                    {/* <FormGroup row> */}\n                    <Formik\n                  initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    password: '',\n                    confirmpassword: '',\n                    phoneNumber:''\n                  }}\n                  validate={values => {\n                    const errors = {};\n                    if (!values.firstName) {\n                      errors.firstName = 'You have to input all the fields correctly'\n                    }\n                    if (!values.lastName) {\n                      errors.lastName = 'You have to input all the fields correctly'\n                    }\n                    if (!values.email) {\n                      errors.email = 'You have to input all the fields correctly'\n                    }\n                    if (!values.password) {\n                      errors.password = 'You have to input all the fields correctly'\n                    }\n                    if (!values.phoneNumber) {\n                      errors.phoneNumber = 'You have to input all the fields correctly'\n                    }\n                    if (values.confirmpassword !== values.password ) {\n                      errors.password = 'You have to input same Password & Confirm'\n                      errors.confirmpassword = 'You have to input same Password & Confirm'\n                    }\n                    return errors;\n                  }}\n                  onSubmit={(values, { setStatus, setSubmitting }) => {\n                    //console.log('===  data 1 == ')\n                    enableLoading();\n                    setTimeout(() => {\n                      if(account === 'Nurse'){\n                              actions.addNurse(values)\n                              .then(res => {\n                                disableLoading();\n                                let {data} = res;\n                                //console.log('===  data  == ')\n                                //console.log(res)\n                                if(!data.success) {\n                                  setSubmitting(false)\n                                  setStatus(\n                                    data.errMessage\n                                  );\n                                  return;\n                                }\n                                else{\n                                setStatus('');\n                                setSubmitting(false);\n                                setSnackcontent('Added Succesfully!')\n                                handleAddsnackClick()\n                                props.allNurses(data.nurses);\n                                }\n                              })\n                              .catch(() => {\n                                //console.log('===  data2  == ')\n                                disableLoading();\n                                setSubmitting(false);\n                                setStatus(\n                                  'Error!!! you have to check your Database or Connection'\n                                );\n                              });\n                        }else{\n                          actions.addClient(values)\n                          .then(res => {\n                            disableLoading();\n                            let {data} = res;\n                            //console.log('===  data  == ')\n                            //console.log(res)\n                            if(!data.success) {\n                              setSubmitting(false)\n                              setStatus(\n                                data.errMessage\n                              );\n                              return;\n                            }\n                            else{\n                              setStatus('');\n                              setSubmitting(false);\n                              setSnackcontent('Added Succesfully!')\n                              handleAddsnackClick()\n                              props.allClients(data.clients);\n                            }\n                          })\n                          .catch(() => {\n                            //console.log('===  data2  == ')\n                            disableLoading();\n                            setSubmitting(false);\n                            setStatus(\n                              'Error!!! you have to check your Database or Connection'\n                            );\n                          });\n                        }\n                       }, 1000);\n                  }}\n                >\n                  {({\n                    values,\n                    status,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }) => (\n                      <form\n                        noValidate={true}\n                        autoComplete=\"off\"\n                        className=\"kt-form\"\n                        onSubmit={handleSubmit}\n                      >\n                         {status ? (\n                              <div role=\"alert\" className=\"alert alert-danger\">\n                                <div className=\"alert-text\">{status}</div>\n                              </div>\n                            ) : (\n                              <div></div>\n                            )}\n                          <div className=\"text-center row\">\n                            <ul className=\"role-tabs flex-middle\">\n                              <li className={`Square ${account =='Nurse' ? \"active\" : \"\"}`} onClick={() => {\n                                    setAccount('Nurse');\n                                  }}>\n                                <input id=\"cadidate\" type=\"radio\" name=\"role\" value=\"wp_job_board_candidate\" defaultChecked/><label htmlFor=\"cadidate\">Nurse</label></li>\n                                <li className={`Square ${account !='Nurse' ? \"active\" : \"\"}`} onClick={() => {\n                                    setAccount('Vendor');\n                                }}>\n                                <input type=\"radio\" id=\"employer\" name=\"role\" value=\"wp_job_board_employer\"/><label htmlFor=\"employer\">Employer</label></li>\n                            </ul>\n                          </div>\n                          {account == 'Nurse' ?\n                          <TextField\n                            id=\"outlined-select-currency\"\n                            select\n                            className={classes.textField}\n                            value={category}\n                            onChange={ (e) => setCategory(e.target.value) }\n                            SelectProps={{\n                              MenuProps: {\n                                className: classes.menu,\n                              },\n                            }}\n                            helperText=\"Please select your currency\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                          >\n                            {categoryarr.map(option => (\n                              <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                              </MenuItem>\n                            ))}\n                          </TextField>:<></>}\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder={account == 'Nurse' ?\"Firstname *\":'Facility Name' }\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"firstName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.firstName}\n                            helperText={touched.firstName && errors.firstName}\n                            error={Boolean(touched.firstName && errors.firstName)}\n                        />\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder={account == 'Nurse' ? \"Lastname *\":'Address' }\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"lastName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.lastName}\n                            helperText={touched.lastName && errors.lastName}\n                            error={Boolean(touched.lastName && errors.lastName)}\n                        />\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder=\"Email *\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.email}\n                            helperText={touched.email && errors.email}\n                            error={Boolean(touched.email && errors.email)}\n                        />\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder=\"Phone Number\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"phoneNumber\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.phoneNumber}\n                            helperText={touched.phoneNumber && errors.phoneNumber}\n                            error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                        />\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            type=\"password\"\n                            placeholder=\"Password *\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.password}\n                            helperText={touched.password && errors.password}\n                            error={Boolean(touched.password && errors.password)}\n                        />\n                        <TextField\n                            id=\"standard-bare\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            type=\"password\"\n                            placeholder=\"Confirm Password *\"\n                            inputProps={{ \"aria-label\": \"bare\" }}\n                            name=\"confirmpassword\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.confirmpassword}\n                            helperText={touched.confirmpassword && errors.confirmpassword}\n                            error={Boolean(touched.confirmpassword && errors.confirmpassword)}\n                        />\n                        \n                          <FormControlLabel\n                              control={\n                                <GreenCheckbox\n                                  checked={state.checkedB}\n                                  onChange={handleChange('checkedB')}\n                                  value=\"checkedB\"\n                                  color=\"primary\"\n                                />\n                              }\n                              label=\"You accept our\"\n                              className={classes.termps_check}\n                            />\n                        <a className=\"terms_link\"href=\"#forgot-password-form-wrapper\" title=\"Forgot Password\">Terms and Conditions and Privacy Policy</a>\n                        <div className=\"row login-form-submit\">\n                          <input type=\"submit\" className={`btn btn-theme-second btn-block ${clsx(\n                      {\n                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n                      }\n                    )}`}\n                    style={loadingButtonStyle} name=\"submit\" value=\"Register Now\" />\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"create-account text-center\" style={{width:'100%'}}>\n                          Already Have an Account?  <Link to=\"/login\"className=\"create\">Sign In</Link>\n                          </div>\n                        </div>\n                      </form>)}\n                      </Formik>\n                    {/* </FormGroup> */}\n                </div>\n                \n            </div>\n          </div>\n          </section>\n          <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={addsnack}\n          autoHideDuration={6000}\n          onClose={handleAddsnackClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={handleAddsnackClose}\n            variant={\"success\"}\n            message={snackcontent}\n          />\n        </Snackbar>\n        <Footer/>\n      </>\n    );\n}\nconst mapStateToProps = (state) => ({\n  role:state.auth.role,\n  allcategories:state.category.allcategories\n})\nexport default injectIntl(\n  connect(\n    mapStateToProps,\n    {...authDuck.actions, ...userDuck.actions,...categoryDuck.actions}\n    // auth.actions\n  )(AuthPageRegister)\n);\n"]},"metadata":{},"sourceType":"module"}