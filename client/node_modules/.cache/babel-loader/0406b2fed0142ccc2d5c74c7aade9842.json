{"ast":null,"code":"var _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\widgets\\\\SalesBarChart.js\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Chart } from \"chart.js\";\nimport { metronic } from \"../../_metronic\";\nexport default function SalesBarChart(_ref) {\n  var title = _ref.title,\n      desc = _ref.desc;\n  var ref = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      successColor: metronic.builder.selectors.getConfig(state, \"colors.state.success\")\n    };\n  }),\n      successColor = _useSelector.successColor;\n\n  var data = useMemo(function () {\n    return {\n      labels: [\"Label 1\", \"Label 2\", \"Label 3\", \"Label 4\", \"Label 5\", \"Label 6\", \"Label 7\", \"Label 8\", \"Label 9\", \"Label 10\", \"Label 11\", \"Label 12\", \"Label 13\", \"Label 14\", \"Label 15\", \"Label 16\"],\n      datasets: [{\n        // label: 'dataset 1',\n        backgroundColor: successColor,\n        data: [15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20]\n      }, {\n        // label: 'dataset 2',\n        backgroundColor: \"#f3f3fb\",\n        data: [15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20]\n      }]\n    };\n  }, [successColor]);\n  useEffect(function () {\n    var chart = new Chart(ref.current, {\n      data: data,\n      type: \"bar\",\n      options: {\n        title: {\n          display: false\n        },\n        tooltips: {\n          intersect: false,\n          mode: \"nearest\",\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10\n        },\n        legend: {\n          display: false\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        barRadius: 4,\n        scales: {\n          xAxes: [{\n            display: false,\n            gridLines: false,\n            stacked: true\n          }],\n          yAxes: [{\n            display: false,\n            stacked: true,\n            gridLines: false\n          }]\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n          }\n        }\n      }\n    });\n    return function () {\n      chart.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-widget14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-widget14__header kt-margin-b-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"kt-widget14__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-widget14__desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, desc)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-widget14__chart\",\n    style: {\n      height: \"120px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/widgets/SalesBarChart.js"],"names":["React","useEffect","useMemo","useRef","useSelector","Chart","metronic","SalesBarChart","title","desc","ref","state","successColor","builder","selectors","getConfig","data","labels","datasets","backgroundColor","chart","current","type","options","display","tooltips","intersect","mode","xPadding","yPadding","caretPadding","legend","responsive","maintainAspectRatio","barRadius","scales","xAxes","gridLines","stacked","yAxes","layout","padding","left","right","top","bottom","destroy","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Chart } from \"chart.js\";\r\nimport { metronic } from \"../../_metronic\";\r\n\r\nexport default function SalesBarChart({ title, desc }) {\r\n  const ref = useRef();\r\n  const { successColor } = useSelector(state => ({\r\n    successColor: metronic.builder.selectors.getConfig(\r\n      state,\r\n      \"colors.state.success\"\r\n    )\r\n  }));\r\n\r\n  const data = useMemo(\r\n    () => ({\r\n      labels: [\r\n        \"Label 1\",\r\n        \"Label 2\",\r\n        \"Label 3\",\r\n        \"Label 4\",\r\n        \"Label 5\",\r\n        \"Label 6\",\r\n        \"Label 7\",\r\n        \"Label 8\",\r\n        \"Label 9\",\r\n        \"Label 10\",\r\n        \"Label 11\",\r\n        \"Label 12\",\r\n        \"Label 13\",\r\n        \"Label 14\",\r\n        \"Label 15\",\r\n        \"Label 16\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          // label: 'dataset 1',\r\n          backgroundColor: successColor,\r\n          data: [15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20]\r\n        },\r\n        {\r\n          // label: 'dataset 2',\r\n          backgroundColor: \"#f3f3fb\",\r\n          data: [15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20]\r\n        }\r\n      ]\r\n    }),\r\n    [successColor]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const chart = new Chart(ref.current, {\r\n      data,\r\n      type: \"bar\",\r\n      options: {\r\n        title: { display: false },\r\n        tooltips: {\r\n          intersect: false,\r\n          mode: \"nearest\",\r\n          xPadding: 10,\r\n          yPadding: 10,\r\n          caretPadding: 10\r\n        },\r\n        legend: { display: false },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        barRadius: 4,\r\n        scales: {\r\n          xAxes: [{ display: false, gridLines: false, stacked: true }],\r\n          yAxes: [{ display: false, stacked: true, gridLines: false }]\r\n        },\r\n        layout: { padding: { left: 0, right: 0, top: 0, bottom: 0 } }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"kt-widget14\">\r\n      <div className=\"kt-widget14__header kt-margin-b-30\">\r\n        <h3 className=\"kt-widget14__title\">{title}</h3>\r\n        <span className=\"kt-widget14__desc\">{desc}</span>\r\n      </div>\r\n      <div className=\"kt-widget14__chart\" style={{ height: \"120px\" }}>\r\n        <canvas ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}