{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nimport { combineReducers } from \"redux\";\nimport * as auth from \"./ducks/auth.duck\";\nimport * as user from \"./ducks/user.duck\";\nimport * as job from \"./ducks/job.duck\";\nimport * as bid from \"./ducks/bid.duck\";\nimport * as history from \"./ducks/history.duck\";\nimport * as activity from \"./ducks/activity.duck\";\nimport * as shortcut from \"./ducks/shortcut.duck\";\nimport * as pageLink from \"./ducks/pageLink.duck\";\nimport * as message from \"./ducks/message.duck\";\nimport * as currentState from \"./ducks/currentState.duck\";\nimport * as ledger from \"./ducks/ledger.duck\";\nimport * as category from \"./ducks/category.duck\";\nimport { metronic } from \"../../_metronic\";\nvar appReducer = combineReducers({\n  auth: auth.authReducer,\n  i18n: metronic.i18n.reducer,\n  builder: metronic.builder.reducer,\n  user: user.userReducer,\n  job: job.jobReducer,\n  bid: bid.bidReducer,\n  message: message.messageReducer,\n  history: history.historyReducer,\n  activity: activity.activityReducer,\n  shortcut: shortcut.shortcutReducer,\n  pageLink: pageLink.pageLinkReducer,\n  currentState: currentState.currentStateReducer,\n  ledger: ledger.ledgerReducer,\n  category: category.categoryReducer\n});\nexport var rootReducer = function rootReducer(state, action) {\n  // if (action.type === 'LOGOUT') {\n  //   state = undefined\n  // }  \n  return appReducer(state, action);\n};\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([auth.saga(), category.saga(), bid.saga(), message.saga(), user.saga(), job.saga(), history.saga(), activity.saga(), shortcut.saga(), pageLink.saga(), currentState.saga(), ledger.saga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/store/rootDuck.js"],"names":["rootSaga","all","combineReducers","auth","user","job","bid","history","activity","shortcut","pageLink","message","currentState","ledger","category","metronic","appReducer","authReducer","i18n","reducer","builder","userReducer","jobReducer","bidReducer","messageReducer","historyReducer","activityReducer","shortcutReducer","pageLinkReducer","currentStateReducer","ledgerReducer","categoryReducer","rootReducer","state","action","saga"],"mappings":";;oDAyCiBA,Q;;AAzCjB,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAO,KAAKC,YAAZ,MAA8B,2BAA9B;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,IAAMC,UAAU,GAAGd,eAAe,CAAC;AACjCC,EAAAA,IAAI,EAAEA,IAAI,CAACc,WADsB;AAEjCC,EAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAT,CAAcC,OAFa;AAGjCC,EAAAA,OAAO,EAAEL,QAAQ,CAACK,OAAT,CAAiBD,OAHO;AAIjCf,EAAAA,IAAI,EAAEA,IAAI,CAACiB,WAJsB;AAKjChB,EAAAA,GAAG,EAAEA,GAAG,CAACiB,UALwB;AAMjChB,EAAAA,GAAG,EAAEA,GAAG,CAACiB,UANwB;AAOjCZ,EAAAA,OAAO,EAACA,OAAO,CAACa,cAPiB;AAQjCjB,EAAAA,OAAO,EAAEA,OAAO,CAACkB,cARgB;AASjCjB,EAAAA,QAAQ,EAAEA,QAAQ,CAACkB,eATc;AAUjCjB,EAAAA,QAAQ,EAAEA,QAAQ,CAACkB,eAVc;AAWjCjB,EAAAA,QAAQ,EAAEA,QAAQ,CAACkB,eAXc;AAYjChB,EAAAA,YAAY,EAAEA,YAAY,CAACiB,mBAZM;AAajChB,EAAAA,MAAM,EAAEA,MAAM,CAACiB,aAbkB;AAcjChB,EAAAA,QAAQ,EAACA,QAAQ,CAACiB;AAde,CAAD,CAAlC;AAiBA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5C;AACA;AACA;AACA,SAAOlB,UAAU,CAACiB,KAAD,EAAQC,MAAR,CAAjB;AACD,CALM;AAOP,OAAO,SAAUlC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACgC,IAAL,EAAD,EAAarB,QAAQ,CAACqB,IAAT,EAAb,EAA6B7B,GAAG,CAAC6B,IAAJ,EAA7B,EAAyCxB,OAAO,CAACwB,IAAR,EAAzC,EAAwD/B,IAAI,CAAC+B,IAAL,EAAxD,EAAoE9B,GAAG,CAAC8B,IAAJ,EAApE,EAA+E5B,OAAO,CAAC4B,IAAR,EAA/E,EAA+F3B,QAAQ,CAAC2B,IAAT,EAA/F,EAAgH1B,QAAQ,CAAC0B,IAAT,EAAhH,EAAiIzB,QAAQ,CAACyB,IAAT,EAAjI,EAAkJvB,YAAY,CAACuB,IAAb,EAAlJ,EAAuKtB,MAAM,CAACsB,IAAP,EAAvK,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from \"redux-saga/effects\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport * as auth from \"./ducks/auth.duck\";\r\nimport * as user from \"./ducks/user.duck\";\r\nimport * as job from \"./ducks/job.duck\";\r\nimport * as bid from \"./ducks/bid.duck\";\r\nimport * as history from \"./ducks/history.duck\";\r\nimport * as activity from \"./ducks/activity.duck\";\r\nimport * as shortcut from \"./ducks/shortcut.duck\";\r\nimport * as pageLink from \"./ducks/pageLink.duck\";\r\nimport * as message from \"./ducks/message.duck\";\r\nimport * as currentState from \"./ducks/currentState.duck\";\r\nimport * as ledger from \"./ducks/ledger.duck\";\r\nimport * as category from \"./ducks/category.duck\";\r\nimport { metronic } from \"../../_metronic\";\r\n\r\nconst appReducer = combineReducers({\r\n  auth: auth.authReducer,\r\n  i18n: metronic.i18n.reducer,\r\n  builder: metronic.builder.reducer,\r\n  user: user.userReducer,\r\n  job: job.jobReducer,\r\n  bid: bid.bidReducer,\r\n  message:message.messageReducer,\r\n  history: history.historyReducer,\r\n  activity: activity.activityReducer,\r\n  shortcut: shortcut.shortcutReducer,\r\n  pageLink: pageLink.pageLinkReducer,\r\n  currentState: currentState.currentStateReducer,\r\n  ledger: ledger.ledgerReducer,\r\n  category:category.categoryReducer\r\n});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  // if (action.type === 'LOGOUT') {\r\n  //   state = undefined\r\n  // }  \r\n  return appReducer(state, action)\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield all([auth.saga(),category.saga(),bid.saga(), message.saga(),user.saga(),job.saga(),history.saga(), activity.saga(), shortcut.saga(), pageLink.saga(), currentState.saga(), ledger.saga()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}