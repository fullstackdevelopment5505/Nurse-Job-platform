{"ast":null,"code":"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\nimport KTUtil from \"./util\";\n\"use strict\"; // plugin setup\n\n\nvar KTToggle = function KTToggle(elementId, options) {\n  // Main object\n  var the = this;\n  var init = false; // Get element object\n\n  var element = KTUtil.get(elementId);\n  var body = KTUtil.get('body');\n\n  if (!element) {\n    return;\n  } // Default options\n\n\n  var defaultOptions = {\n    togglerState: '',\n    targetState: ''\n  }; ////////////////////////////\n  // ** Private Methods  ** //\n  ////////////////////////////\n\n  var Plugin = {\n    /**\r\n     * Construct\r\n     */\n    construct: function construct(options) {\n      if (KTUtil.data(element).has('toggle')) {\n        the = KTUtil.data(element).get('toggle');\n      } else {\n        // reset menu\n        Plugin.init(options); // build menu\n\n        Plugin.build();\n        KTUtil.data(element).set('toggle', the);\n      }\n\n      return the;\n    },\n\n    /**\r\n     * Handles subtoggle click toggle\r\n     */\n    init: function init(options) {\n      the.element = element;\n      the.events = []; // merge default and user defined options\n\n      the.options = KTUtil.deepExtend({}, defaultOptions, options);\n      the.target = KTUtil.get(the.options.target);\n      the.targetState = the.options.targetState;\n      the.togglerState = the.options.togglerState;\n      the.state = KTUtil.hasClasses(the.target, the.targetState) ? 'on' : 'off';\n    },\n\n    /**\r\n     * Setup toggle\r\n     */\n    build: function build() {\n      KTUtil.addEvent(element, 'mouseup', Plugin.toggle);\n    },\n\n    /**\r\n     * Handles offcanvas click toggle\r\n     */\n    toggle: function toggle(e) {\n      Plugin.eventTrigger('beforeToggle');\n\n      if (the.state == 'off') {\n        Plugin.toggleOn();\n      } else {\n        Plugin.toggleOff();\n      }\n\n      Plugin.eventTrigger('afterToggle');\n      e.preventDefault();\n      return the;\n    },\n\n    /**\r\n     * Handles toggle click toggle\r\n     */\n    toggleOn: function toggleOn() {\n      Plugin.eventTrigger('beforeOn');\n      KTUtil.addClass(the.target, the.targetState);\n\n      if (the.togglerState) {\n        KTUtil.addClass(element, the.togglerState);\n      }\n\n      the.state = 'on';\n      Plugin.eventTrigger('afterOn');\n      Plugin.eventTrigger('toggle');\n      return the;\n    },\n\n    /**\r\n     * Handles toggle click toggle\r\n     */\n    toggleOff: function toggleOff() {\n      Plugin.eventTrigger('beforeOff');\n      KTUtil.removeClass(the.target, the.targetState);\n\n      if (the.togglerState) {\n        KTUtil.removeClass(element, the.togglerState);\n      }\n\n      the.state = 'off';\n      Plugin.eventTrigger('afterOff');\n      Plugin.eventTrigger('toggle');\n      return the;\n    },\n\n    /**\r\n     * Trigger events\r\n     */\n    eventTrigger: function eventTrigger(name) {\n      for (var i = 0; i < the.events.length; i++) {\n        var event = the.events[i];\n\n        if (event.name == name) {\n          if (event.one == true) {\n            if (event.fired == false) {\n              the.events[i].fired = true;\n              return event.handler.call(this, the);\n            }\n          } else {\n            return event.handler.call(this, the);\n          }\n        }\n      }\n    },\n    addEvent: function addEvent(name, handler, one) {\n      the.events.push({\n        name: name,\n        handler: handler,\n        one: one,\n        fired: false\n      });\n      return the;\n    }\n  }; //////////////////////////\n  // ** Public Methods ** //\n  //////////////////////////\n\n  /**\r\n   * Set default options \r\n   */\n\n  the.setDefaults = function (options) {\n    defaultOptions = options;\n  };\n  /**\r\n   * Get toggle state \r\n   */\n\n\n  the.getState = function () {\n    return the.state;\n  };\n  /**\r\n   * Toggle \r\n   */\n\n\n  the.toggle = function () {\n    return Plugin.toggle();\n  };\n  /**\r\n   * Toggle on \r\n   */\n\n\n  the.toggleOn = function () {\n    return Plugin.toggleOn();\n  };\n  /**\r\n   * Toggle off \r\n   */\n\n\n  the.toggleOff = function () {\n    return Plugin.toggleOff();\n  };\n  /**\r\n   * Attach event\r\n   * @returns {KTToggle}\r\n   */\n\n\n  the.on = function (name, handler) {\n    return Plugin.addEvent(name, handler);\n  };\n  /**\r\n   * Attach event that will be fired once\r\n   * @returns {KTToggle}\r\n   */\n\n\n  the.one = function (name, handler) {\n    return Plugin.addEvent(name, handler, true);\n  }; // Construct plugin\n\n\n  Plugin.construct.apply(the, [options]);\n  return the;\n}; // webpack support\n\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = KTToggle;\n}\n\nexport default KTToggle;","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/_metronic/_assets/js/toggle.js"],"names":["KTUtil","KTToggle","elementId","options","the","init","element","get","body","defaultOptions","togglerState","targetState","Plugin","construct","data","has","build","set","events","deepExtend","target","state","hasClasses","addEvent","toggle","e","eventTrigger","toggleOn","toggleOff","preventDefault","addClass","removeClass","name","i","length","event","one","fired","handler","call","push","setDefaults","getState","on","apply","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\n\r\n// plugin setup\r\nvar KTToggle = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');  \r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {\r\n        togglerState: '',\r\n        targetState: ''\r\n    };    \r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('toggle')) {\r\n                the = KTUtil.data(element).get('toggle');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('toggle', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subtoggle click toggle\r\n         */\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            the.target = KTUtil.get(the.options.target);\r\n            the.targetState = the.options.targetState;\r\n            the.togglerState = the.options.togglerState;\r\n\r\n            the.state = KTUtil.hasClasses(the.target, the.targetState) ? 'on' : 'off';\r\n        },\r\n\r\n        /**\r\n         * Setup toggle\r\n         */\r\n        build: function() {\r\n            KTUtil.addEvent(element, 'mouseup', Plugin.toggle);\r\n        },\r\n        \r\n        /**\r\n         * Handles offcanvas click toggle\r\n         */\r\n        toggle: function(e) {\r\n            Plugin.eventTrigger('beforeToggle');\r\n\r\n            if (the.state == 'off') {\r\n                Plugin.toggleOn();\r\n            } else {\r\n                Plugin.toggleOff();\r\n            }\r\n\r\n            Plugin.eventTrigger('afterToggle');\r\n\r\n            e.preventDefault();\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOn: function() {\r\n            Plugin.eventTrigger('beforeOn');\r\n\r\n            KTUtil.addClass(the.target, the.targetState);\r\n\r\n            if (the.togglerState) {\r\n                KTUtil.addClass(element, the.togglerState);\r\n            }\r\n\r\n            the.state = 'on';\r\n\r\n            Plugin.eventTrigger('afterOn');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOff: function() {\r\n            Plugin.eventTrigger('beforeOff');\r\n\r\n            KTUtil.removeClass(the.target, the.targetState);\r\n\r\n            if (the.togglerState) {\r\n                KTUtil.removeClass(element, the.togglerState);\r\n            }\r\n\r\n            the.state = 'off';\r\n\r\n            Plugin.eventTrigger('afterOff');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;                            \r\n                            return event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Get toggle state \r\n     */\r\n    the.getState = function() {\r\n        return the.state;\r\n    };\r\n\r\n    /**\r\n     * Toggle \r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggle();\r\n    };\r\n\r\n    /**\r\n     * Toggle on \r\n     */\r\n    the.toggleOn = function() {\r\n        return Plugin.toggleOn();\r\n    };\r\n\r\n    /**\r\n     * Toggle off \r\n     */\r\n    the.toggleOff = function() {\r\n        return Plugin.toggleOff();\r\n    };\r\n\r\n    /**\r\n     * Attach event\r\n     * @returns {KTToggle}\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     * @returns {KTToggle}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    // Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTToggle;\r\n}\r\n\r\nexport default KTToggle;\r\n"]},"metadata":{},"sourceType":"module"}