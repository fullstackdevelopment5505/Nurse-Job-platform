{"ast":null,"code":"import _classCallCheck from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\partials\\\\layout\\\\LanguageSelector.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { metronic, toAbsoluteUrl } from \"../../../_metronic\";\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\nvar languages = [{\n  lang: \"en\",\n  name: \"English\",\n  flag: toAbsoluteUrl(\"/media/flags/260-united-kingdom.svg\")\n}, {\n  lang: \"zh\",\n  name: \"Mandarin\",\n  flag: toAbsoluteUrl(\"/media/flags/034-china.svg\")\n}, {\n  lang: \"es\",\n  name: \"Spanish\",\n  flag: toAbsoluteUrl(\"/media/flags/128-spain.svg\")\n}, {\n  lang: \"ja\",\n  name: \"Japanese\",\n  flag: toAbsoluteUrl(\"/media/flags/063-japan.svg\")\n}, {\n  lang: \"de\",\n  name: \"German\",\n  flag: toAbsoluteUrl(\"/media/flags/162-germany.svg\")\n}, {\n  lang: \"fr\",\n  name: \"French\",\n  flag: toAbsoluteUrl(\"/media/flags/195-france.svg\")\n}];\n\nvar LanguageSelector = /*#__PURE__*/function (_React$Component) {\n  _inherits(LanguageSelector, _React$Component);\n\n  var _super = _createSuper(LanguageSelector);\n\n  function LanguageSelector() {\n    _classCallCheck(this, LanguageSelector);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LanguageSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          lang = _this$props.lang,\n          iconType = _this$props.iconType,\n          setLanguage = _this$props.setLanguage;\n      var currentLanguage = languages.find(function (x) {\n        return x.lang === lang;\n      });\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        className: \"kt-header__topbar-item kt-header__topbar-item--langs\",\n        drop: \"down\",\n        alignRight: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        as: HeaderDropdownToggle,\n        id: \"dropdown-toggle-my-cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: clsx(\"kt-header__topbar-icon\", {\n          \"kt-header__topbar-icon--brand\": iconType === \"brand\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: currentLanguage.flag,\n        alt: currentLanguage.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"kt-nav kt-margin-t-10 kt-margin-b-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, languages.map(function (language) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: language.lang,\n          className: clsx(\"kt-nav__item\", {\n            \"kt-nav__item--active\": language.lang === currentLanguage.lang\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          onClick: function onClick() {\n            setLanguage(language.lang);\n\n            _this.setState({\n              open: false\n            });\n\n            setTimeout(function () {\n              return window.location.reload();\n            }, 400);\n          },\n          className: clsx(\"kt-nav__link\", {\n            \"kt-nav__link--active\": language.lang === currentLanguage.lang\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"kt-nav__link-icon\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: language.flag,\n          alt: language.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"kt-nav__link-text\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }\n        }, language.name)));\n      }))));\n    }\n  }]);\n\n  return LanguageSelector;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var i18n = _ref.i18n;\n  return {\n    lang: i18n.lang\n  };\n};\n\nexport default connect(mapStateToProps, metronic.i18n.actions)(LanguageSelector);","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/partials/layout/LanguageSelector.js"],"names":["React","clsx","connect","Dropdown","metronic","toAbsoluteUrl","HeaderDropdownToggle","languages","lang","name","flag","LanguageSelector","props","iconType","setLanguage","currentLanguage","find","x","map","language","setState","open","setTimeout","window","location","reload","Component","mapStateToProps","i18n","actions"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { metronic, toAbsoluteUrl } from \"../../../_metronic\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\n\r\nconst languages = [\r\n  {\r\n    lang: \"en\",\r\n    name: \"English\",\r\n    flag: toAbsoluteUrl(\"/media/flags/260-united-kingdom.svg\")\r\n  },\r\n  {\r\n    lang: \"zh\",\r\n    name: \"Mandarin\",\r\n    flag: toAbsoluteUrl(\"/media/flags/034-china.svg\")\r\n  },\r\n  {\r\n    lang: \"es\",\r\n    name: \"Spanish\",\r\n    flag: toAbsoluteUrl(\"/media/flags/128-spain.svg\")\r\n  },\r\n  {\r\n    lang: \"ja\",\r\n    name: \"Japanese\",\r\n    flag: toAbsoluteUrl(\"/media/flags/063-japan.svg\")\r\n  },\r\n  {\r\n    lang: \"de\",\r\n    name: \"German\",\r\n    flag: toAbsoluteUrl(\"/media/flags/162-germany.svg\")\r\n  },\r\n  {\r\n    lang: \"fr\",\r\n    name: \"French\",\r\n    flag: toAbsoluteUrl(\"/media/flags/195-france.svg\")\r\n  }\r\n];\r\n\r\nclass LanguageSelector extends React.Component {\r\n  render() {\r\n    const { lang, iconType, setLanguage } = this.props;\r\n    const currentLanguage = languages.find(x => x.lang === lang);\r\n    return (\r\n      <Dropdown\r\n        className=\"kt-header__topbar-item kt-header__topbar-item--langs\"\r\n        drop=\"down\" alignRight\r\n      >\r\n        <Dropdown.Toggle as={HeaderDropdownToggle} id=\"dropdown-toggle-my-cart\">\r\n          <span\r\n            className={clsx(\"kt-header__topbar-icon\", {\r\n              \"kt-header__topbar-icon--brand\": iconType === \"brand\"\r\n            })}\r\n          >\r\n            <img src={currentLanguage.flag} alt={currentLanguage.name} />\r\n          </span>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround\">\r\n          <ul className=\"kt-nav kt-margin-t-10 kt-margin-b-10\">\r\n            {languages.map(language => (\r\n              <li\r\n                key={language.lang}\r\n                className={clsx(\"kt-nav__item\", {\r\n                  \"kt-nav__item--active\": language.lang === currentLanguage.lang\r\n                })}\r\n              >\r\n                <span\r\n                  onClick={() => {\r\n                    setLanguage(language.lang);\r\n                    this.setState({ open: false });\r\n                    setTimeout(()=> window.location.reload(), 400);\r\n                  }}\r\n                  className={clsx(\"kt-nav__link\", {\r\n                    \"kt-nav__link--active\":\r\n                      language.lang === currentLanguage.lang\r\n                  })}\r\n                >\r\n                  <span className=\"kt-nav__link-icon\">\r\n                    <img src={language.flag} alt={language.name} />\r\n                  </span>\r\n                  <span className=\"kt-nav__link-text\">{language.name}</span>\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ i18n }) => ({ lang: i18n.lang });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  metronic.i18n.actions\r\n)(LanguageSelector);\r\n"]},"metadata":{},"sourceType":"module"}