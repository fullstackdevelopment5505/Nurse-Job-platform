{"ast":null,"code":"import * as utils from \"../../_metronic/utils/utils\";\nvar localStorageLastLocationKey = \"demo1-lastLocation\";\n\nfunction acceptLocation(lastLocation) {\n  if (lastLocation && lastLocation.pathname && lastLocation.pathname !== \"/\" && lastLocation.pathname.indexOf(\"auth\") === -1 && lastLocation.pathname !== \"/logout\") {\n    return true;\n  }\n\n  return false;\n}\n\nexport function saveLastLocation(lastLocation) {\n  var localStorateLocations = utils.getStorage(localStorageLastLocationKey);\n\n  var _useLocations = localStorateLocations ? JSON.parse(localStorateLocations) : [];\n\n  if (acceptLocation(lastLocation)) {\n    _useLocations.push(lastLocation.pathname);\n\n    utils.setStorage(localStorageLastLocationKey, JSON.stringify(_useLocations), 120);\n  }\n}\nexport function forgotLastLocation() {\n  utils.removeStorage(localStorageLastLocationKey);\n}\nexport function getLastLocation() {\n  var localStorateLocations = utils.getStorage(localStorageLastLocationKey);\n\n  if (!localStorateLocations) {\n    return \"/\";\n  }\n\n  var _userLocations = JSON.parse(localStorateLocations);\n\n  var result = _userLocations.length > 0 ? _userLocations.pop() : \"/\";\n  return result;\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/router/RouterHelpers.js"],"names":["utils","localStorageLastLocationKey","acceptLocation","lastLocation","pathname","indexOf","saveLastLocation","localStorateLocations","getStorage","_useLocations","JSON","parse","push","setStorage","stringify","forgotLastLocation","removeStorage","getLastLocation","_userLocations","result","length","pop"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AAEA,IAAMC,2BAA2B,GAAG,oBAApC;;AAEA,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,MACEA,YAAY,IACZA,YAAY,CAACC,QADb,IAEAD,YAAY,CAACC,QAAb,KAA0B,GAF1B,IAGAD,YAAY,CAACC,QAAb,CAAsBC,OAAtB,CAA8B,MAA9B,MAA0C,CAAC,CAH3C,IAIAF,YAAY,CAACC,QAAb,KAA0B,SAL5B,EAME;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,OAAO,SAASE,gBAAT,CAA0BH,YAA1B,EAAwC;AAC7C,MAAMI,qBAAqB,GAAGP,KAAK,CAACQ,UAAN,CAAiBP,2BAAjB,CAA9B;;AACA,MAAIQ,aAAa,GAAGF,qBAAqB,GACrCG,IAAI,CAACC,KAAL,CAAWJ,qBAAX,CADqC,GAErC,EAFJ;;AAIA,MAAIL,cAAc,CAACC,YAAD,CAAlB,EAAkC;AAChCM,IAAAA,aAAa,CAACG,IAAd,CAAmBT,YAAY,CAACC,QAAhC;;AACAJ,IAAAA,KAAK,CAACa,UAAN,CACEZ,2BADF,EAEES,IAAI,CAACI,SAAL,CAAeL,aAAf,CAFF,EAGE,GAHF;AAKD;AACF;AAED,OAAO,SAASM,kBAAT,GAA8B;AACnCf,EAAAA,KAAK,CAACgB,aAAN,CAAoBf,2BAApB;AACD;AAED,OAAO,SAASgB,eAAT,GAA2B;AAChC,MAAMV,qBAAqB,GAAGP,KAAK,CAACQ,UAAN,CAAiBP,2BAAjB,CAA9B;;AACA,MAAI,CAACM,qBAAL,EAA4B;AAC1B,WAAO,GAAP;AACD;;AAED,MAAMW,cAAc,GAAGR,IAAI,CAACC,KAAL,CAAWJ,qBAAX,CAAvB;;AACA,MAAMY,MAAM,GAAGD,cAAc,CAACE,MAAf,GAAwB,CAAxB,GAA4BF,cAAc,CAACG,GAAf,EAA5B,GAAmD,GAAlE;AACA,SAAOF,MAAP;AACD","sourcesContent":["import * as utils from \"../../_metronic/utils/utils\";\r\n\r\nconst localStorageLastLocationKey = \"demo1-lastLocation\";\r\n\r\nfunction acceptLocation(lastLocation) {\r\n  if (\r\n    lastLocation &&\r\n    lastLocation.pathname &&\r\n    lastLocation.pathname !== \"/\" &&\r\n    lastLocation.pathname.indexOf(\"auth\") === -1 &&\r\n    lastLocation.pathname !== \"/logout\"\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function saveLastLocation(lastLocation) {\r\n  const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\r\n  let _useLocations = localStorateLocations\r\n    ? JSON.parse(localStorateLocations)\r\n    : [];\r\n\r\n  if (acceptLocation(lastLocation)) {\r\n    _useLocations.push(lastLocation.pathname);\r\n    utils.setStorage(\r\n      localStorageLastLocationKey,\r\n      JSON.stringify(_useLocations),\r\n      120\r\n    );\r\n  }\r\n}\r\n\r\nexport function forgotLastLocation() {\r\n  utils.removeStorage(localStorageLastLocationKey);\r\n}\r\n\r\nexport function getLastLocation() {\r\n  const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\r\n  if (!localStorateLocations) {\r\n    return \"/\";\r\n  }\r\n\r\n  const _userLocations = JSON.parse(localStorateLocations);\r\n  const result = _userLocations.length > 0 ? _userLocations.pop() : \"/\";\r\n  return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}