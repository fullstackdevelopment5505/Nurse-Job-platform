{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\partials\\\\content\\\\Notice.js\";\n\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nvar Notice = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n      iconRef = _ref.iconRef,\n      textRef = _ref.textRef,\n      iconWrapperRef = _ref.iconWrapperRef,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"iconRef\", \"textRef\", \"iconWrapperRef\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n    ref: ref,\n    role: \"alert\",\n    className: clsx(\"alert alert-light alert-elevate\", className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), icon && /*#__PURE__*/React.createElement(\"div\", {\n    ref: iconWrapperRef,\n    className: \"alert-icon alert-icon-top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    ref: iconRef,\n    className: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text\",\n    ref: textRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, children));\n});\nexport default Notice; // Set display name for debugging.\n\nif (process.env.NODE_ENV !== \"production\") {\n  Notice.displayName = \"Notice\";\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/partials/content/Notice.js"],"names":["React","forwardRef","clsx","Notice","ref","icon","iconRef","textRef","iconWrapperRef","className","children","props","process","env","NODE_ENV","displayName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,IAAMC,MAAM,GAAGF,UAAU,CACvB,gBAEEG,GAFF,EAGK;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MAFKC,OAEL,QAFKA,OAEL;AAAA,MAFcC,OAEd,QAFcA,OAEd;AAAA,MAFuBC,cAEvB,QAFuBA,cAEvB;AAAA,MAFuCC,SAEvC,QAFuCA,SAEvC;AAAA,MAFkDC,QAElD,QAFkDA,QAElD;AAAA,MAF+DC,KAE/D;;AACH,sBACE,6CACMA,KADN;AAEE,IAAA,GAAG,EAAEP,GAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAEF,IAAI,CAAC,iCAAD,EAAoCO,SAApC,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGJ,IAAI,iBACH;AAAK,IAAA,GAAG,EAAEG,cAAV;AAA0B,IAAA,SAAS,EAAC,2BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,GAAG,EAAEF,OAAR;AAAiB,IAAA,SAAS,EAAED,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,eAYE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,CAZF,CADF;AAkBD,CAvBsB,CAAzB;AA0BA,eAAeP,MAAf,C,CAEA;;AACA,IAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCX,EAAAA,MAAM,CAACY,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Notice = forwardRef(\r\n  (\r\n    { icon, iconRef, textRef, iconWrapperRef, className, children, ...props },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref}\r\n        role=\"alert\"\r\n        className={clsx(\"alert alert-light alert-elevate\", className)}\r\n      >\r\n        {icon && (\r\n          <div ref={iconWrapperRef} className=\"alert-icon alert-icon-top\">\r\n            <i ref={iconRef} className={icon} />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"alert-text\" ref={textRef}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Notice;\r\n\r\n// Set display name for debugging.\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  Notice.displayName = \"Notice\";\r\n}\r\n"]},"metadata":{},"sourceType":"module"}