{"ast":null,"code":"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\nimport KTUtil from \"./util\";\n\"use strict\";\n\nvar KTScrolltop = function KTScrolltop(elementId, options) {\n  // Main object\n  var the = this;\n  var init = false; // Get element object\n\n  var element = KTUtil.get(elementId);\n  var body = KTUtil.get('body');\n\n  if (!element) {\n    return;\n  } // Default options\n\n\n  var defaultOptions = {\n    offset: 300,\n    speed: 600,\n    toggleClass: 'kt-scrolltop--on'\n  }; ////////////////////////////\n  // ** Private Methods  ** //\n  ////////////////////////////\n\n  var Plugin = {\n    /**\r\n     * Run plugin\r\n     * @returns {mscrolltop}\r\n     */\n    construct: function construct(options) {\n      if (KTUtil.data(element).has('scrolltop')) {\n        the = KTUtil.data(element).get('scrolltop');\n      } else {\n        // reset scrolltop\n        Plugin.init(options); // build scrolltop\n\n        Plugin.build();\n        KTUtil.data(element).set('scrolltop', the);\n      }\n\n      return the;\n    },\n\n    /**\r\n     * Handles subscrolltop click toggle\r\n     * @returns {mscrolltop}\r\n     */\n    init: function init(options) {\n      the.events = []; // merge default and user defined options\n\n      the.options = KTUtil.deepExtend({}, defaultOptions, options);\n    },\n    build: function build() {\n      // handle window scroll\n      if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n        window.addEventListener('touchend', function () {\n          Plugin.handle();\n        });\n        window.addEventListener('touchcancel', function () {\n          Plugin.handle();\n        });\n        window.addEventListener('touchleave', function () {\n          Plugin.handle();\n        });\n      } else {\n        window.addEventListener('scroll', function () {\n          Plugin.handle();\n        });\n      } // handle button click \n\n\n      KTUtil.addEvent(element, 'click', Plugin.scroll);\n    },\n\n    /**\r\n     * Handles scrolltop click scrollTop\r\n     */\n    handle: function handle() {\n      var pos = window.pageYOffset; // current vertical position\n\n      if (pos > the.options.offset) {\n        KTUtil.addClass(body, the.options.toggleClass);\n      } else {\n        KTUtil.removeClass(body, the.options.toggleClass);\n      }\n    },\n\n    /**\r\n     * Handles scrolltop click scrollTop\r\n     */\n    scroll: function scroll(e) {\n      e.preventDefault();\n      KTUtil.scrollTop(0, the.options.speed);\n    },\n\n    /**\r\n     * Trigger events\r\n     */\n    eventTrigger: function eventTrigger(name, args) {\n      for (var i = 0; i < the.events.length; i++) {\n        var event = the.events[i];\n\n        if (event.name == name) {\n          if (event.one == true) {\n            if (event.fired == false) {\n              the.events[i].fired = true;\n              return event.handler.call(this, the, args);\n            }\n          } else {\n            return event.handler.call(this, the, args);\n          }\n        }\n      }\n    },\n    addEvent: function addEvent(name, handler, one) {\n      the.events.push({\n        name: name,\n        handler: handler,\n        one: one,\n        fired: false\n      });\n    }\n  }; //////////////////////////\n  // ** Public Methods ** //\n  //////////////////////////\n\n  /**\r\n   * Set default options \r\n   */\n\n  the.setDefaults = function (options) {\n    defaultOptions = options;\n  };\n  /**\r\n   * Get subscrolltop mode\r\n   */\n\n\n  the.on = function (name, handler) {\n    return Plugin.addEvent(name, handler);\n  };\n  /**\r\n   * Set scrolltop content\r\n   * @returns {mscrolltop}\r\n   */\n\n\n  the.one = function (name, handler) {\n    return Plugin.addEvent(name, handler, true);\n  }; ///////////////////////////////\n  // ** Plugin Construction ** //\n  ///////////////////////////////\n  // Run plugin\n\n\n  Plugin.construct.apply(the, [options]); // Init done\n\n  init = true; // Return plugin instance\n\n  return the;\n}; // webpack support\n\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = KTScrolltop;\n}\n\nexport default KTScrolltop;","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/_metronic/_assets/js/scrolltop.js"],"names":["KTUtil","KTScrolltop","elementId","options","the","init","element","get","body","defaultOptions","offset","speed","toggleClass","Plugin","construct","data","has","build","set","events","deepExtend","navigator","userAgent","match","window","addEventListener","handle","addEvent","scroll","pos","pageYOffset","addClass","removeClass","e","preventDefault","scrollTop","eventTrigger","name","args","i","length","event","one","fired","handler","call","push","setDefaults","on","apply","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\nvar KTScrolltop = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {\r\n        offset: 300,\r\n        speed: 600,\r\n        toggleClass: 'kt-scrolltop--on'\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {mscrolltop}\r\n         */\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('scrolltop')) {\r\n                the = KTUtil.data(element).get('scrolltop');\r\n            } else {\r\n                // reset scrolltop\r\n                Plugin.init(options);\r\n\r\n                // build scrolltop\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('scrolltop', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subscrolltop click toggle\r\n         * @returns {mscrolltop}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n        },\r\n\r\n        build: function() {\r\n            // handle window scroll\r\n            if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\r\n                window.addEventListener('touchend', function() {\r\n                    Plugin.handle();\r\n                });\r\n\r\n                window.addEventListener('touchcancel', function() {\r\n                    Plugin.handle();\r\n                });\r\n\r\n                window.addEventListener('touchleave', function() {\r\n                    Plugin.handle();\r\n                });\r\n            } else {\r\n                window.addEventListener('scroll', function() { \r\n                    Plugin.handle();\r\n                });\r\n            }\r\n\r\n            // handle button click \r\n            KTUtil.addEvent(element, 'click', Plugin.scroll);\r\n        },\r\n\r\n        /**\r\n         * Handles scrolltop click scrollTop\r\n         */\r\n        handle: function() {\r\n            var pos = window.pageYOffset; // current vertical position\r\n            if (pos > the.options.offset) {\r\n                KTUtil.addClass(body, the.options.toggleClass);\r\n            } else {\r\n                KTUtil.removeClass(body, the.options.toggleClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles scrolltop click scrollTop\r\n         */\r\n        scroll: function(e) {\r\n            e.preventDefault();\r\n\r\n            KTUtil.scrollTop(0, the.options.speed);\r\n        },\r\n\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            return event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                       return event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Get subscrolltop mode\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Set scrolltop content\r\n     * @returns {mscrolltop}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    // Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    // Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTScrolltop;\r\n}\r\n\r\nexport default  KTScrolltop;\r\n"]},"metadata":{},"sourceType":"module"}