{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport * as routerHelpers from \"../../router/RouterHelpers\";\nexport var actionTypes = {\n  AllPageLinks: \"[AllPageLinks] Action\",\n  Logout: \"[Logout] Action\"\n};\nvar initialPageLinkState = {\n  banner: undefined,\n  terms: undefined,\n  privacy: undefined,\n  contact: undefined\n};\nexport var pageLinkReducer = function pageLinkReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPageLinkState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AllPageLinks:\n      {\n        var _action$payload = action.payload,\n            banner = _action$payload.banner,\n            terms = _action$payload.terms,\n            privacy = _action$payload.privacy,\n            contact = _action$payload.contact;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          banner: banner,\n          terms: terms,\n          privacy: privacy,\n          contact: contact\n        });\n      }\n\n    case actionTypes.Logout:\n      {\n        return initialPageLinkState;\n      }\n\n    default:\n      return state;\n  }\n}; // );\n\nexport var actions = {\n  allPageLinks: function allPageLinks(pageLinks) {\n    return {\n      type: actionTypes.AllPageLinks,\n      payload: pageLinks\n    };\n  },\n  logout: function logout() {\n    return {\n      type: actionTypes.Logout\n    };\n  }\n};\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/store/ducks/pageLink.duck.js"],"names":["saga","routerHelpers","actionTypes","AllPageLinks","Logout","initialPageLinkState","banner","undefined","terms","privacy","contact","pageLinkReducer","state","action","type","payload","actions","allPageLinks","pageLinks","logout"],"mappings":";;;oDAoCiBA,I;;AApCjB,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,YAAY,EAAG,uBADU;AAEzBC,EAAAA,MAAM,EAAG;AAFgB,CAApB;AAKP,IAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,MAAM,EAAEC,SADmB;AAE3BC,EAAAA,KAAK,EAAED,SAFoB;AAG3BE,EAAAA,OAAO,EAAEF,SAHkB;AAI3BG,EAAAA,OAAO,EAAEH;AAJkB,CAA7B;AAOA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAA0C;AAAA,MAAzCC,KAAyC,uEAAjCP,oBAAiC;AAAA,MAAXQ,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAW,CAACC,YAAjB;AAA+B;AAAA,8BACaU,MAAM,CAACE,OADpB;AAAA,YACtBT,MADsB,mBACtBA,MADsB;AAAA,YACdE,KADc,mBACdA,KADc;AAAA,YACPC,OADO,mBACPA,OADO;AAAA,YACEC,OADF,mBACEA,OADF;AAE7B,+CAAYE,KAAZ;AAAmBN,UAAAA,MAAM,EAAEA,MAA3B;AAAmCE,UAAAA,KAAK,EAAEA,KAA1C;AAAiDC,UAAAA,OAAO,EAAEA,OAA1D;AAAmEC,UAAAA,OAAO,EAAEA;AAA5E;AACD;;AAED,SAAKR,WAAW,CAACE,MAAjB;AAAyB;AACvB,eAAOC,oBAAP;AACD;;AAED;AACE,aAAOO,KAAP;AAXJ;AAaD,CAdI,C,CAeP;;AAEA,OAAO,IAAMI,OAAO,GAAG;AACrBC,EAAAA,YAAY,EAAE,sBAAAC,SAAS;AAAA,WAAK;AAAEJ,MAAAA,IAAI,EAAEZ,WAAW,CAACC,YAApB;AAAkCY,MAAAA,OAAO,EAAEG;AAA3C,KAAL;AAAA,GADF;AAErBC,EAAAA,MAAM,EAAE;AAAA,WAAO;AAAEL,MAAAA,IAAI,EAAEZ,WAAW,CAACE;AAApB,KAAP;AAAA;AAFa,CAAhB;AAKP,OAAO,SAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as routerHelpers from \"../../router/RouterHelpers\";\r\n\r\nexport const actionTypes = {\r\n  AllPageLinks : \"[AllPageLinks] Action\",\r\n  Logout : \"[Logout] Action\",\r\n};\r\n\r\nconst initialPageLinkState = {\r\n  banner: undefined,\r\n  terms: undefined,\r\n  privacy: undefined,\r\n  contact: undefined,\r\n};\r\n\r\nexport const pageLinkReducer = (state = initialPageLinkState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.AllPageLinks: {\r\n        const {banner, terms, privacy, contact} = action.payload;\r\n        return { ...state, banner: banner, terms: terms, privacy: privacy, contact: contact };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        return initialPageLinkState;\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n// );\r\n\r\nexport const actions = {\r\n  allPageLinks: pageLinks => ({ type: actionTypes.AllPageLinks, payload: pageLinks }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n};\r\n\r\nexport function* saga() {\r\n  // yield takeLatest(actionTypes.AllUsers, function* allUsersSaga() {\r\n  //   yield put(actions.allUsers());\r\n  // });\r\n\r\n  // yield takeLatest(actionTypes.AddUser, function* addUserSaga() {\r\n  //   yield put(actions.addUser());\r\n  // });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}