{"ast":null,"code":"import _objectSpread from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _this = this;\n\nimport objectPath from \"object-path\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport LayoutConfig from \"../layout/LayoutConfig\";\nimport MenuConfig from \"../layout/MenuConfig\";\nexport var actionTypes = {\n  SetMenuConfig: \"builder/SET_MENU_CONFIG\",\n  SetLayoutConfigs: \"builder/SET_LAYOUT_CONFIGS\",\n  SetLayoutConfigsWithPageRefresh: \"builder/SET_LAYOUT_CONFIGS_WITH_PAGE_REFRESH\",\n  SetHtmlClassService: \"builder/SET_HTML_CLASS_SERVICE\"\n};\nexport var selectors = {\n  getClasses: function getClasses(store, params) {\n    var htmlClassServiceObjects = store.builder.htmlClassServiceObjects;\n    return htmlClassServiceObjects ? htmlClassServiceObjects.getClasses(params.path, params.toString) : \"\";\n  },\n  getAttributes: function getAttributes(store, params) {\n    if (params.path) {\n      // if path is specified, get the value within object\n      var htmlClassServiceObjects = store.builder.htmlClassServiceObjects;\n      return htmlClassServiceObjects ? htmlClassServiceObjects.getAttributes(params.path) : [];\n    }\n\n    return [];\n  },\n  getConfig: function getConfig(state, path) {\n    var layoutConfig = state.builder.layoutConfig;\n\n    if (path) {\n      // if path is specified, get the value within object\n      return objectPath.get(layoutConfig, path);\n    }\n\n    return \"\";\n  },\n  getLogo: function getLogo(_ref) {\n    var layoutConfig = _ref.builder.layoutConfig;\n    var menuAsideLeftSkin = objectPath.get(layoutConfig, \"brand.self.skin\"); // set brand logo\n\n    var logoObject = objectPath.get(layoutConfig, \"self.logo\");\n    var logo;\n\n    if (typeof logoObject === \"string\") {\n      logo = logoObject;\n    }\n\n    if (typeof logoObject === \"object\") {\n      logo = objectPath.get(logoObject, menuAsideLeftSkin + \"\");\n    }\n\n    if (typeof logo === \"undefined\") {\n      try {\n        var logos = objectPath.get(_this.layoutConfig, \"self.logo\");\n        logo = logos[Object.keys(logos)[0]];\n      } catch (e) {}\n    }\n\n    return logo;\n  },\n  getStickyLogo: function getStickyLogo(store) {\n    var layoutConfig = store.builder.layoutConfig;\n    var logo = objectPath.get(layoutConfig, \"self.logo.sticky\");\n\n    if (typeof logo === \"undefined\") {\n      logo = selectors.getLogo(store);\n    }\n\n    return logo + \"\";\n  }\n};\nvar initialState = {\n  menuConfig: MenuConfig,\n  layoutConfig: LayoutConfig,\n  htmlClassServiceObjects: undefined\n};\nexport var reducer = persistReducer({\n  storage: storage,\n  key: \"build-demo1\",\n  blacklist: [\"htmlClassServiceObjects\"]\n}, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case actionTypes.SetMenuConfig:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuConfig: payload\n      });\n\n    case actionTypes.SetLayoutConfigs:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        layoutConfig: payload\n      });\n\n    case actionTypes.SetLayoutConfigsWithPageRefresh:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          layoutConfig: payload\n        });\n      }\n\n    case actionTypes.SetHtmlClassService:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        htmlClassServiceObjects: payload\n      });\n\n    default:\n      return state;\n  }\n});\nexport var actions = {\n  setMenuConfig: function setMenuConfig(payload) {\n    return {\n      payload: payload,\n      type: actionTypes.SetMenuConfig\n    };\n  },\n  setLayoutConfigs: function setLayoutConfigs(payload) {\n    return {\n      payload: payload,\n      type: actionTypes.SetLayoutConfigs\n    };\n  },\n  setLayoutConfigsWithPageRefresh: function setLayoutConfigsWithPageRefresh(payload) {\n    return {\n      payload: payload,\n      type: actionTypes.SetLayoutConfigsWithPageRefresh\n    };\n  },\n  setHtmlClassService: function setHtmlClassService(payload) {\n    return {\n      payload: payload,\n      type: actionTypes.SetHtmlClassService\n    };\n  }\n};","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/_metronic/ducks/builder.js"],"names":["objectPath","persistReducer","storage","LayoutConfig","MenuConfig","actionTypes","SetMenuConfig","SetLayoutConfigs","SetLayoutConfigsWithPageRefresh","SetHtmlClassService","selectors","getClasses","store","params","htmlClassServiceObjects","builder","path","toString","getAttributes","getConfig","state","layoutConfig","get","getLogo","menuAsideLeftSkin","logoObject","logo","logos","Object","keys","e","getStickyLogo","initialState","menuConfig","undefined","reducer","key","blacklist","type","payload","actions","setMenuConfig","setLayoutConfigs","setLayoutConfigsWithPageRefresh","setHtmlClassService"],"mappings":"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","sourcesContent":["import objectPath from \"object-path\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport LayoutConfig from \"../layout/LayoutConfig\";\r\nimport MenuConfig from \"../layout/MenuConfig\";\r\n\r\nexport const actionTypes = {\r\n  SetMenuConfig: \"builder/SET_MENU_CONFIG\",\r\n  SetLayoutConfigs: \"builder/SET_LAYOUT_CONFIGS\",\r\n  SetLayoutConfigsWithPageRefresh: \"builder/SET_LAYOUT_CONFIGS_WITH_PAGE_REFRESH\",\r\n  SetHtmlClassService: \"builder/SET_HTML_CLASS_SERVICE\"\r\n};\r\n\r\nexport const selectors = {\r\n  getClasses: (store, params) => {\r\n    const { htmlClassServiceObjects } = store.builder;\r\n\r\n    return htmlClassServiceObjects\r\n      ? htmlClassServiceObjects.getClasses(params.path, params.toString)\r\n      : \"\";\r\n  },\r\n  getAttributes: (store, params) => {\r\n    if (params.path) {\r\n      // if path is specified, get the value within object\r\n      const { htmlClassServiceObjects } = store.builder;\r\n\r\n      return htmlClassServiceObjects\r\n          ? htmlClassServiceObjects.getAttributes(params.path)\r\n          : [];    }\r\n\r\n    return [];\r\n  },\r\n  getConfig: (state, path) => {\r\n    const { layoutConfig } = state.builder;\r\n\r\n    if (path) {\r\n      // if path is specified, get the value within object\r\n      return objectPath.get(layoutConfig, path);\r\n    }\r\n\r\n    return \"\";\r\n  },\r\n\r\n  getLogo: ({ builder: { layoutConfig } }) => {\r\n    const menuAsideLeftSkin = objectPath.get(layoutConfig, \"brand.self.skin\");\r\n    // set brand logo\r\n    const logoObject = objectPath.get(layoutConfig, \"self.logo\");\r\n    let logo;\r\n    if (typeof logoObject === \"string\") {\r\n      logo = logoObject;\r\n    }\r\n\r\n    if (typeof logoObject === \"object\") {\r\n      logo = objectPath.get(logoObject, menuAsideLeftSkin + \"\");\r\n    }\r\n\r\n    if (typeof logo === \"undefined\") {\r\n      try {\r\n        const logos = objectPath.get(this.layoutConfig, \"self.logo\");\r\n        logo = logos[Object.keys(logos)[0]];\r\n      } catch (e) {}\r\n    }\r\n    return logo;\r\n  },\r\n\r\n  getStickyLogo: store => {\r\n    const { layoutConfig } = store.builder;\r\n    let logo = objectPath.get(layoutConfig, \"self.logo.sticky\");\r\n    if (typeof logo === \"undefined\") {\r\n      logo = selectors.getLogo(store);\r\n    }\r\n    return logo + \"\";\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  menuConfig: MenuConfig,\r\n  layoutConfig: LayoutConfig,\r\n  htmlClassServiceObjects: undefined\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  {\r\n    storage,\r\n    key: \"build-demo1\",\r\n    blacklist: [\"htmlClassServiceObjects\"]\r\n  },\r\n  (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case actionTypes.SetMenuConfig:\r\n        return { ...state, menuConfig: payload };\r\n\r\n      case actionTypes.SetLayoutConfigs:\r\n        return { ...state, layoutConfig: payload };\r\n\r\n      case actionTypes.SetLayoutConfigsWithPageRefresh: {\r\n        return {...state, layoutConfig: payload};\r\n      }\r\n      case actionTypes.SetHtmlClassService:\r\n        return { ...state, htmlClassServiceObjects: payload };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  setMenuConfig: payload => ({ payload, type: actionTypes.SetMenuConfig }),\r\n\r\n  setLayoutConfigs: payload => ({\r\n    payload,\r\n    type: actionTypes.SetLayoutConfigs\r\n  }),\r\n\r\n  setLayoutConfigsWithPageRefresh: payload => ({\r\n    payload,\r\n    type: actionTypes.SetLayoutConfigsWithPageRefresh\r\n  }),\r\n\r\n  setHtmlClassService: payload => ({\r\n    payload,\r\n    type: actionTypes.SetHtmlClassService\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}