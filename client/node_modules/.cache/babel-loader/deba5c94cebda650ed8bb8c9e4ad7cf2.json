{"ast":null,"code":"import _classCallCheck from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\pages\\\\auth\\\\ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { TextField } from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport * as auth from \"../../store/ducks/auth.duck\";\nimport { requestPassword } from \"../../crud/auth.crud\";\n\nvar ForgotPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  var _super = _createSuper(ForgotPassword);\n\n  function ForgotPassword() {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isRequested: false\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var intl = this.props.intl;\n      var isRequested = this.state.isRequested;\n\n      if (isRequested) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/admin/auth\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"kt-login__body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"kt-login__form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"kt-login__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"AUTH.FORGOT.TITLE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          email: \"\"\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = intl.formatMessage({\n              id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n            });\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = intl.formatMessage({\n              id: \"AUTH.VALIDATION.INVALID_FIELD\"\n            });\n          }\n\n          return errors;\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setStatus = _ref.setStatus,\n              setSubmitting = _ref.setSubmitting;\n          requestPassword(values.email).then(function () {\n            _this2.setState({\n              isRequested: true\n            });\n          }).catch(function () {\n            setSubmitting(false);\n            setStatus(intl.formatMessage({\n              id: \"AUTH.VALIDATION.NOT_FOUND\"\n            }, {\n              name: values.email\n            }));\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, function (_ref2) {\n        var values = _ref2.values,\n            status = _ref2.status,\n            errors = _ref2.errors,\n            touched = _ref2.touched,\n            handleChange = _ref2.handleChange,\n            handleBlur = _ref2.handleBlur,\n            handleSubmit = _ref2.handleSubmit,\n            isSubmitting = _ref2.isSubmitting;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"kt-form\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, status && /*#__PURE__*/React.createElement(\"div\", {\n          role: \"alert\",\n          className: \"alert alert-danger\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert-text\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }\n        }, status)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          type: \"email\",\n          label: \"Email\",\n          margin: \"normal\",\n          fullWidth: true,\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.email,\n          helperText: touched.email && errors.email,\n          error: Boolean(touched.email && errors.email),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"kt-login__actions\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/admin/auth\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary btn-elevate kt-login__btn-secondary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }\n        }, \"Back\")), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-elevate kt-login__btn-primary\",\n          disabled: isSubmitting,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }, \"Submit\")));\n      }))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nexport default injectIntl(connect(null, auth.actions)(ForgotPassword));","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/pages/auth/ForgotPassword.js"],"names":["React","Component","Formik","connect","TextField","Link","Redirect","FormattedMessage","injectIntl","auth","requestPassword","ForgotPassword","state","isRequested","intl","props","email","values","errors","formatMessage","id","test","setStatus","setSubmitting","then","setState","catch","name","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Boolean","actions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport * as auth from \"../../store/ducks/auth.duck\";\r\nimport { requestPassword } from \"../../crud/auth.crud\";\r\n\r\nclass ForgotPassword extends Component {\r\n  state = { isRequested: false };\r\n\r\n  render() {\r\n    const { intl } = this.props;\r\n    const { isRequested } = this.state;\r\n\r\n    if (isRequested) {\r\n      return <Redirect to=\"/admin/auth\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"kt-login__body\">\r\n          <div className=\"kt-login__form\">\r\n            <div className=\"kt-login__title\">\r\n              <h3>\r\n                <FormattedMessage id=\"AUTH.FORGOT.TITLE\" />\r\n              </h3>\r\n            </div>\r\n\r\n            <Formik\r\n              initialValues={{ email: \"\" }}\r\n              validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.email) {\r\n                  errors.email = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                } else if (\r\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                ) {\r\n                  errors.email = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n                  });\r\n                }\r\n\r\n                return errors;\r\n              }}\r\n              onSubmit={(values, { setStatus, setSubmitting }) => {\r\n                requestPassword(values.email)\r\n                  .then(() => {\r\n                    this.setState({ isRequested: true });\r\n                  })\r\n                  .catch(() => {\r\n                    setSubmitting(false);\r\n                    setStatus(\r\n                      intl.formatMessage(\r\n                        { id: \"AUTH.VALIDATION.NOT_FOUND\" },\r\n                        { name: values.email }\r\n                      )\r\n                    );\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                status,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n              }) => (\r\n                <form onSubmit={handleSubmit} className=\"kt-form\">\r\n                  {status && (\r\n                    <div role=\"alert\" className=\"alert alert-danger\">\r\n                      <div className=\"alert-text\">{status}</div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group\">\r\n                    <TextField\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      margin=\"normal\"\r\n                      fullWidth={true}\r\n                      name=\"email\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(touched.email && errors.email)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"kt-login__actions\">\r\n                    <Link to=\"/admin/auth\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary btn-elevate kt-login__btn-secondary\"\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </Link>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ForgotPassword));\r\n"]},"metadata":{},"sourceType":"module"}