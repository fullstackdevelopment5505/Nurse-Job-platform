{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport { put, takeLatest } from \"redux-saga/effects\";\nimport * as routerHelpers from \"../../router/RouterHelpers\";\nexport var actionTypes = {\n  AllShortCuts: \"[AllShortCuts] Action\",\n  UpdateShortCut: \"[UpdateShortCut] Action\",\n  Logout: \"[Logout] Action\"\n};\nvar initialShortCutState = {\n  shortcuts: []\n};\nexport var shortcutReducer = function shortcutReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialShortCutState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AllShortCuts:\n      {\n        var allShortCuts = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          shortcuts: allShortCuts\n        });\n      }\n\n    case actionTypes.UpdateShortCut:\n      {\n        var _allShortCuts = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          shortcuts: _allShortCuts\n        });\n      }\n\n    case actionTypes.Logout:\n      {\n        return initialShortCutState;\n      }\n\n    default:\n      return state;\n  }\n};\nexport var actions = {\n  allShortCuts: function allShortCuts(_allShortCuts2) {\n    return {\n      type: actionTypes.AllShortCuts,\n      payload: _allShortCuts2\n    };\n  },\n  updateShortCut: function updateShortCut(allShortCuts) {\n    return {\n      type: actionTypes.UpdateShortCut,\n      payload: allShortCuts\n    };\n  },\n  logout: function logout() {\n    return {\n      type: actionTypes.Logout\n    };\n  }\n};\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/store/ducks/shortcut.duck.js"],"names":["saga","put","takeLatest","routerHelpers","actionTypes","AllShortCuts","UpdateShortCut","Logout","initialShortCutState","shortcuts","shortcutReducer","state","action","type","allShortCuts","payload","actions","updateShortCut","logout"],"mappings":";;;oDAwCiBA,I;;AAxCjB,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,YAAY,EAAG,uBADU;AAEzBC,EAAAA,cAAc,EAAG,yBAFQ;AAGzBC,EAAAA,MAAM,EAAG;AAHgB,CAApB;AAMP,IAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAA7B;AAIA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA0C;AAAA,MAAzCC,KAAyC,uEAAjCH,oBAAiC;AAAA,MAAXI,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACC,YAAjB;AAA+B;AAC7B,YAAMS,YAAY,GAAGF,MAAM,CAACG,OAA5B;AACA,+CAAYJ,KAAZ;AAAmBF,UAAAA,SAAS,EAAEK;AAA9B;AACD;;AAED,SAAKV,WAAW,CAACE,cAAjB;AAAiC;AAC/B,YAAMQ,aAAY,GAAGF,MAAM,CAACG,OAA5B;AACA,+CAAYJ,KAAZ;AAAmBF,UAAAA,SAAS,EAAEK;AAA9B;AACD;;AAED,SAAKV,WAAW,CAACG,MAAjB;AAAyB;AACvB,eAAOC,oBAAP;AACD;;AAED;AACE,aAAOG,KAAP;AAhBJ;AAkBH,CAnBM;AAqBP,OAAO,IAAMK,OAAO,GAAG;AACrBF,EAAAA,YAAY,EAAE,sBAAAA,cAAY;AAAA,WAAK;AAAED,MAAAA,IAAI,EAAET,WAAW,CAACC,YAApB;AAAkCU,MAAAA,OAAO,EAAED;AAA3C,KAAL;AAAA,GADL;AAErBG,EAAAA,cAAc,EAAE,wBAAAH,YAAY;AAAA,WAAK;AAAED,MAAAA,IAAI,EAAET,WAAW,CAACE,cAApB;AAAoCS,MAAAA,OAAO,EAAED;AAA7C,KAAL;AAAA,GAFP;AAGrBI,EAAAA,MAAM,EAAE;AAAA,WAAO;AAAEL,MAAAA,IAAI,EAAET,WAAW,CAACG;AAApB,KAAP;AAAA;AAHa,CAAhB;AAMP,OAAO,SAAUP,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\r\nimport * as routerHelpers from \"../../router/RouterHelpers\";\r\n\r\nexport const actionTypes = {\r\n  AllShortCuts : \"[AllShortCuts] Action\",\r\n  UpdateShortCut : \"[UpdateShortCut] Action\",\r\n  Logout : \"[Logout] Action\",\r\n};\r\n\r\nconst initialShortCutState = {\r\n  shortcuts: [],\r\n};\r\n\r\nexport const shortcutReducer = (state = initialShortCutState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.AllShortCuts: {\r\n        const allShortCuts = action.payload;\r\n        return { ...state, shortcuts: allShortCuts };\r\n      }\r\n\r\n      case actionTypes.UpdateShortCut: {\r\n        const allShortCuts = action.payload;\r\n        return { ...state, shortcuts: allShortCuts };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        return initialShortCutState;\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n  allShortCuts: allShortCuts => ({ type: actionTypes.AllShortCuts, payload: allShortCuts }),\r\n  updateShortCut: allShortCuts => ({ type: actionTypes.UpdateShortCut, payload: allShortCuts }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n};\r\n\r\nexport function* saga() {\r\n  // yield takeLatest(actionTypes.AllShortCuts, function* allShortCutsSaga() {\r\n  //   yield put(actions.allShortCuts());\r\n  // });\r\n\r\n  // yield takeLatest(actionTypes.AddShortCut, function* addShortCutSaga() {\r\n  //   yield put(actions.addShortCut());\r\n  // });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}