{"ast":null,"code":"var _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\pages\\\\home\\\\docs\\\\UseADemo.js\";\nimport React from \"react\";\nimport { Portlet, PortletBody, PortletHeader } from \"../../../partials/content/Portlet\";\nimport { CodeBlock } from \"../../../partials/content/CodeExample\";\nexport default function UseADemo() {\n  return /*#__PURE__*/React.createElement(Portlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PortletHeader, {\n    title: \"How to use a demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PortletBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Theme comes with multi-demo app and single app components. For demo purpose, all demos layout are enabled by default. Here is the guide on how to set only one demo for production use and to remove the demo name from the URL router.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"All demos are modular and easy to switch. Multi-demo app is located in the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"src/DemoApp.js\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Go to the entry file \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }\n  }, \"src/index.js\"), \". The example code below shows how to use \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }\n  }, \"demo2\"), \" as a default. You can change the module path to use different demo module.\"), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"diff\",\n    code: \"            \\n            import axios from \\\"axios\\\";\\n            import React from \\\"react\\\";\\n            import ReactDOM from \\\"react-dom\\\";\\n            -import DemoApp from \\\"./DemoApp\\\";\\n            +import App from \\\"./App\\\";\\n            import store, { persistor } from \\\"./app/store/store\\\";\\n            import { mockAxios, setupAxios } from \\\"./_metronic\\\";\\n            \\n            import \\\"./index.css\\\";\\n            \\n            /**\\n             * Website public url.\\n             *\\n             * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\\n             */\\n            const { PUBLIC_URL } = process.env;\\n            \\n            /**\\n             * Mock API, use return `mock` variable to add new mocks.\\n             *\\n             * @see https://github.com/ctimmerm/axios-mock-adapter\\n             */\\n            /* const mock = */ mockAxios(axios);\\n            \\n            /**\\n             * Inject metronic interceptors for axios.\\n             *\\n             * @see https://github.com/axios/axios#interceptors\\n             */\\n            setupAxios(axios, store);\\n            \\n            -// Uncomment to enable single App mode.\\n            -/*\\n            const Layout = React.lazy(() =>\\n            -  import(\\\"./_metronic/layouts/demo1/Layout.js\\\")\\n            +  import(\\\"./_metronic/layouts/demo2/Layout.js\\\")\\n            );\\n            \\n            ReactDOM.render(\\n              <App\\n                store={store}\\n                Layout={Layout}\\n                persistor={persistor}\\n                basename={PUBLIC_URL}\\n              />,\\n              document.getElementById(\\\"root\\\")\\n            );\\n            -*/\\n            -\\n            -// Multi-demo app mode.\\n            -ReactDOM.render(\\n            -  <DemoApp store={store} persistor={persistor} basename={PUBLIC_URL} />,\\n            -  document.getElementById(\\\"root\\\")\\n            -);\\n          \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/pages/home/docs/UseADemo.js"],"names":["React","Portlet","PortletBody","PortletHeader","CodeBlock","UseADemo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,aAHF,QAIO,mCAJP;AAKA,SAASC,SAAT,QAA0B,uCAA1B;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+OADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFN,CARF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADvB,6DAEmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFnB,gFAbF,eAmBE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAC,MADX;AAEE,IAAA,IAAI,07DAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAFF,CADF;AAoFD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Portlet,\r\n  PortletBody,\r\n  PortletHeader\r\n} from \"../../../partials/content/Portlet\";\r\nimport { CodeBlock } from \"../../../partials/content/CodeExample\";\r\n\r\nexport default function UseADemo() {\r\n  return (\r\n    <Portlet>\r\n      <PortletHeader title=\"How to use a demo\" />\r\n      <PortletBody>\r\n        <p>\r\n          Theme comes with multi-demo app and single app components. For demo\r\n          purpose, all demos layout are enabled by default. Here is the guide on\r\n          how to set only one demo for production use and to remove the demo\r\n          name from the URL router.\r\n        </p>\r\n\r\n        <p>\r\n          All demos are modular and easy to switch. Multi-demo app is located in\r\n          the <code>src/DemoApp.js</code>\r\n        </p>\r\n\r\n        <p>\r\n          Go to the entry file <code>src/index.js</code>. The example code below\r\n          shows how to use <code>demo2</code> as a default. You can change the\r\n          module path to use different demo module.\r\n        </p>\r\n\r\n        <CodeBlock\r\n          language=\"diff\"\r\n          code={`            \r\n            import axios from \"axios\";\r\n            import React from \"react\";\r\n            import ReactDOM from \"react-dom\";\r\n            -import DemoApp from \"./DemoApp\";\r\n            +import App from \"./App\";\r\n            import store, { persistor } from \"./app/store/store\";\r\n            import { mockAxios, setupAxios } from \"./_metronic\";\r\n            \r\n            import \"./index.css\";\r\n            \r\n            /**\r\n             * Website public url.\r\n             *\r\n             * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n             */\r\n            const { PUBLIC_URL } = process.env;\r\n            \r\n            /**\r\n             * Mock API, use return \\`mock\\` variable to add new mocks.\r\n             *\r\n             * @see https://github.com/ctimmerm/axios-mock-adapter\r\n             */\r\n            /* const mock = */ mockAxios(axios);\r\n            \r\n            /**\r\n             * Inject metronic interceptors for axios.\r\n             *\r\n             * @see https://github.com/axios/axios#interceptors\r\n             */\r\n            setupAxios(axios, store);\r\n            \r\n            -// Uncomment to enable single App mode.\r\n            -/*\r\n            const Layout = React.lazy(() =>\r\n            -  import(\"./_metronic/layouts/demo1/Layout.js\")\r\n            +  import(\"./_metronic/layouts/demo2/Layout.js\")\r\n            );\r\n            \r\n            ReactDOM.render(\r\n              <App\r\n                store={store}\r\n                Layout={Layout}\r\n                persistor={persistor}\r\n                basename={PUBLIC_URL}\r\n              />,\r\n              document.getElementById(\"root\")\r\n            );\r\n            -*/\r\n            -\r\n            -// Multi-demo app mode.\r\n            -ReactDOM.render(\r\n            -  <DemoApp store={store} persistor={persistor} basename={PUBLIC_URL} />,\r\n            -  document.getElementById(\"root\")\r\n            -);\r\n          `}\r\n        />\r\n      </PortletBody>\r\n    </Portlet>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}