{"ast":null,"code":"/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\nimport KTUtil from \"./util\";\n\"use strict\";\n\nvar KTOffcanvas = function KTOffcanvas(elementId, options) {\n  // Main object\n  var the = this;\n  var init = false; // Get element object\n\n  var element = KTUtil.get(elementId);\n  var body = KTUtil.get('body');\n\n  if (!element) {\n    return;\n  } // Default options\n\n\n  var defaultOptions = {}; ////////////////////////////\n  // ** Private Methods  ** //\n  ////////////////////////////\n\n  var Plugin = {\n    construct: function construct(options) {\n      if (KTUtil.data(element).has('offcanvas')) {\n        the = KTUtil.data(element).get('offcanvas');\n      } else {\n        // reset offcanvas\n        Plugin.init(options); // build offcanvas\n\n        Plugin.build();\n        KTUtil.data(element).set('offcanvas', the);\n      }\n\n      return the;\n    },\n    init: function init(options) {\n      the.events = []; // merge default and user defined options\n\n      the.options = KTUtil.deepExtend({}, defaultOptions, options);\n      the.overlay;\n      the.classBase = the.options.baseClass;\n      the.classShown = the.classBase + '--on';\n      the.classOverlay = the.classBase + '-overlay';\n      the.state = KTUtil.hasClass(element, the.classShown) ? 'shown' : 'hidden';\n    },\n    build: function build() {\n      // offcanvas toggle\n      if (the.options.toggleBy) {\n        if (typeof the.options.toggleBy === 'string') {\n          KTUtil.addEvent(the.options.toggleBy, 'click', function (e) {\n            e.preventDefault();\n            Plugin.toggle();\n          });\n        } else if (the.options.toggleBy && the.options.toggleBy[0]) {\n          if (the.options.toggleBy[0].target) {\n            for (var i in the.options.toggleBy) {\n              KTUtil.addEvent(the.options.toggleBy[i].target, 'click', function (e) {\n                e.preventDefault();\n                Plugin.toggle();\n              });\n            }\n          } else {\n            for (var i in the.options.toggleBy) {\n              KTUtil.addEvent(the.options.toggleBy[i], 'click', function (e) {\n                e.preventDefault();\n                Plugin.toggle();\n              });\n            }\n          }\n        } else if (the.options.toggleBy && the.options.toggleBy.target) {\n          KTUtil.addEvent(the.options.toggleBy.target, 'click', function (e) {\n            e.preventDefault();\n            Plugin.toggle();\n          });\n        }\n      } // offcanvas close\n\n\n      var closeBy = KTUtil.get(the.options.closeBy);\n\n      if (closeBy) {\n        KTUtil.addEvent(closeBy, 'click', function (e) {\n          e.preventDefault();\n          Plugin.hide();\n        });\n      } // Window resize\n\n      /*\r\n      KTUtil.addResizeHandler(function() {\r\n          if (parseInt(KTUtil.css(element, 'left')) >= 0 || parseInt(KTUtil.css(element, 'right') >= 0) || KTUtil.css(element, 'position') != 'fixed') {\r\n              KTUtil.css(element, 'opacity', '1');\r\n          }\r\n      });\r\n      */\n\n    },\n    isShown: function isShown(target) {\n      return the.state == 'shown' ? true : false;\n    },\n    toggle: function toggle() {\n      ;\n      Plugin.eventTrigger('toggle');\n\n      if (the.state == 'shown') {\n        Plugin.hide(this);\n      } else {\n        Plugin.show(this);\n      }\n    },\n    show: function show(target) {\n      if (the.state == 'shown') {\n        return;\n      }\n\n      Plugin.eventTrigger('beforeShow');\n      Plugin.togglerClass(target, 'show'); // Offcanvas panel\n\n      KTUtil.addClass(body, the.classShown);\n      KTUtil.addClass(element, the.classShown); //KTUtil.css(element, 'opacity', '1');\n\n      the.state = 'shown';\n\n      if (the.options.overlay) {\n        the.overlay = KTUtil.insertAfter(document.createElement('DIV'), element);\n        KTUtil.addClass(the.overlay, the.classOverlay);\n        KTUtil.addEvent(the.overlay, 'click', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n          Plugin.hide(target);\n        });\n      }\n\n      Plugin.eventTrigger('afterShow');\n    },\n    hide: function hide(target) {\n      if (the.state == 'hidden') {\n        return;\n      }\n\n      Plugin.eventTrigger('beforeHide');\n      Plugin.togglerClass(target, 'hide');\n      KTUtil.removeClass(body, the.classShown);\n      KTUtil.removeClass(element, the.classShown);\n      the.state = 'hidden';\n\n      if (the.options.overlay && the.overlay) {\n        KTUtil.remove(the.overlay);\n      }\n      /*\r\n      KTUtil.transitionEnd(element, function() {\r\n          KTUtil.css(element, 'opacity', '0');\r\n      });\r\n      */\n\n\n      Plugin.eventTrigger('afterHide');\n    },\n    togglerClass: function togglerClass(target, mode) {\n      // Toggler\n      var id = KTUtil.attr(target, 'id');\n      var toggleBy;\n\n      if (the.options.toggleBy && the.options.toggleBy[0] && the.options.toggleBy[0].target) {\n        for (var i in the.options.toggleBy) {\n          if (the.options.toggleBy[i].target === id) {\n            toggleBy = the.options.toggleBy[i];\n          }\n        }\n      } else if (the.options.toggleBy && the.options.toggleBy.target) {\n        toggleBy = the.options.toggleBy;\n      }\n\n      if (toggleBy) {\n        var el = KTUtil.get(toggleBy.target);\n\n        if (mode === 'show') {\n          KTUtil.addClass(el, toggleBy.state);\n        }\n\n        if (mode === 'hide') {\n          KTUtil.removeClass(el, toggleBy.state);\n        }\n      }\n    },\n    eventTrigger: function eventTrigger(name, args) {\n      for (var i = 0; i < the.events.length; i++) {\n        var event = the.events[i];\n\n        if (event.name == name) {\n          if (event.one == true) {\n            if (event.fired == false) {\n              the.events[i].fired = true;\n              return event.handler.call(this, the, args);\n            }\n          } else {\n            return event.handler.call(this, the, args);\n          }\n        }\n      }\n    },\n    addEvent: function addEvent(name, handler, one) {\n      the.events.push({\n        name: name,\n        handler: handler,\n        one: one,\n        fired: false\n      });\n    }\n  }; //////////////////////////\n  // ** Public Methods ** //\n  //////////////////////////\n\n  the.setDefaults = function (options) {\n    defaultOptions = options;\n  };\n\n  the.isShown = function () {\n    return Plugin.isShown();\n  };\n\n  the.hide = function () {\n    return Plugin.hide();\n  };\n\n  the.show = function () {\n    return Plugin.show();\n  };\n\n  the.on = function (name, handler) {\n    return Plugin.addEvent(name, handler);\n  };\n\n  the.one = function (name, handler) {\n    return Plugin.addEvent(name, handler, true);\n  }; ///////////////////////////////\n  // ** Plugin Construction ** //\n  ///////////////////////////////\n  // Run plugin\n\n\n  Plugin.construct.apply(the, [options]); // Init done\n\n  init = true; // Return plugin instance\n\n  return the;\n}; // webpack support\n\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = KTOffcanvas;\n}\n\nexport default KTOffcanvas;","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/_metronic/_assets/js/offcanvas.js"],"names":["KTUtil","KTOffcanvas","elementId","options","the","init","element","get","body","defaultOptions","Plugin","construct","data","has","build","set","events","deepExtend","overlay","classBase","baseClass","classShown","classOverlay","state","hasClass","toggleBy","addEvent","e","preventDefault","toggle","target","i","closeBy","hide","isShown","eventTrigger","show","togglerClass","addClass","insertAfter","document","createElement","stopPropagation","removeClass","remove","mode","id","attr","el","name","args","length","event","one","fired","handler","call","push","setDefaults","on","apply","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\nvar KTOffcanvas = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {};\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('offcanvas')) {\r\n                the = KTUtil.data(element).get('offcanvas');\r\n            } else {\r\n                // reset offcanvas\r\n                Plugin.init(options);\r\n\r\n                // build offcanvas\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('offcanvas', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n            the.overlay;\r\n\r\n            the.classBase = the.options.baseClass;\r\n            the.classShown = the.classBase + '--on';\r\n            the.classOverlay = the.classBase + '-overlay';\r\n\r\n            the.state = KTUtil.hasClass(element, the.classShown) ? 'shown' : 'hidden';\r\n        },\r\n\r\n        build: function() {\r\n            // offcanvas toggle\r\n            if (the.options.toggleBy) {\r\n                if (typeof the.options.toggleBy === 'string') {\r\n                    KTUtil.addEvent( the.options.toggleBy, 'click', function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.toggle();\r\n                    });\r\n                } else if (the.options.toggleBy && the.options.toggleBy[0]) {\r\n                    if (the.options.toggleBy[0].target) {\r\n                        for (var i in the.options.toggleBy) {\r\n                            KTUtil.addEvent( the.options.toggleBy[i].target, 'click', function(e) {\r\n                                e.preventDefault();\r\n                                Plugin.toggle();\r\n                            });\r\n                        }\r\n                    } else {\r\n                        for (var i in the.options.toggleBy) {\r\n                            KTUtil.addEvent( the.options.toggleBy[i], 'click', function(e) {\r\n                                e.preventDefault();\r\n                                Plugin.toggle();\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                } else if (the.options.toggleBy && the.options.toggleBy.target) {\r\n                    KTUtil.addEvent( the.options.toggleBy.target, 'click', function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.toggle();\r\n                    });\r\n                }\r\n            }\r\n\r\n            // offcanvas close\r\n            var closeBy = KTUtil.get(the.options.closeBy);\r\n            if (closeBy) {\r\n                KTUtil.addEvent(closeBy, 'click', function(e) {\r\n                    e.preventDefault();\r\n                    Plugin.hide();\r\n                });\r\n            }\r\n\r\n            // Window resize\r\n            /*\r\n            KTUtil.addResizeHandler(function() {\r\n                if (parseInt(KTUtil.css(element, 'left')) >= 0 || parseInt(KTUtil.css(element, 'right') >= 0) || KTUtil.css(element, 'position') != 'fixed') {\r\n                    KTUtil.css(element, 'opacity', '1');\r\n                }\r\n            });\r\n            */\r\n        },\r\n\r\n        isShown: function(target) {\r\n            return (the.state == 'shown' ? true : false);\r\n        },\r\n\r\n        toggle: function() {;\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            if (the.state == 'shown') {\r\n                Plugin.hide(this);\r\n            } else {\r\n                Plugin.show(this);\r\n            }\r\n        },\r\n\r\n        show: function(target) {\r\n            if (the.state == 'shown') {\r\n                return;\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeShow');\r\n\r\n            Plugin.togglerClass(target, 'show');\r\n\r\n            // Offcanvas panel\r\n            KTUtil.addClass(body, the.classShown);\r\n            KTUtil.addClass(element, the.classShown);\r\n            //KTUtil.css(element, 'opacity', '1');\r\n\r\n            the.state = 'shown';\r\n\r\n            if (the.options.overlay) {\r\n                the.overlay = KTUtil.insertAfter(document.createElement('DIV') , element );\r\n                KTUtil.addClass(the.overlay, the.classOverlay);\r\n                KTUtil.addEvent(the.overlay, 'click', function(e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    Plugin.hide(target);\r\n                });\r\n            }\r\n\r\n            Plugin.eventTrigger('afterShow');\r\n        },\r\n\r\n        hide: function(target) {\r\n            if (the.state == 'hidden') {\r\n                return;\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeHide');\r\n\r\n            Plugin.togglerClass(target, 'hide');\r\n\r\n            KTUtil.removeClass(body, the.classShown);\r\n            KTUtil.removeClass(element, the.classShown);\r\n\r\n            the.state = 'hidden';\r\n\r\n            if (the.options.overlay && the.overlay) {\r\n                KTUtil.remove(the.overlay);\r\n            }\r\n\r\n            /*\r\n            KTUtil.transitionEnd(element, function() {\r\n                KTUtil.css(element, 'opacity', '0');\r\n            });\r\n            */\r\n\r\n            Plugin.eventTrigger('afterHide');\r\n        },\r\n\r\n        togglerClass: function(target, mode) {\r\n            // Toggler\r\n            var id = KTUtil.attr(target, 'id');\r\n            var toggleBy;\r\n\r\n            if (the.options.toggleBy && the.options.toggleBy[0] && the.options.toggleBy[0].target) {\r\n                for (var i in the.options.toggleBy) {\r\n                    if (the.options.toggleBy[i].target === id) {\r\n                        toggleBy = the.options.toggleBy[i];\r\n                    }\r\n                }\r\n            } else if (the.options.toggleBy && the.options.toggleBy.target) {\r\n                toggleBy = the.options.toggleBy;\r\n            }\r\n\r\n            if (toggleBy) {\r\n                var el = KTUtil.get(toggleBy.target);\r\n\r\n                if (mode === 'show') {\r\n                    KTUtil.addClass(el, toggleBy.state);\r\n                }\r\n\r\n                if (mode === 'hide') {\r\n                    KTUtil.removeClass(el, toggleBy.state);\r\n                }\r\n            }\r\n        },\r\n\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            return event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    the.isShown = function() {\r\n        return Plugin.isShown();\r\n    };\r\n\r\n    the.hide = function() {\r\n        return Plugin.hide();\r\n    };\r\n\r\n    the.show = function() {\r\n        return Plugin.show();\r\n    };\r\n\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    // Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    // Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTOffcanvas;\r\n}\r\n\r\nexport  default  KTOffcanvas;\r\n"]},"metadata":{},"sourceType":"module"}