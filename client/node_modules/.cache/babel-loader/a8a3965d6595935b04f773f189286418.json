{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nimport { rootReducer, rootSaga } from \"./rootDuck\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    var serializedState = JSON.stringify(state);\n    localStorage.setItem('personal', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    var serializedState = localStorage.getItem('personal');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nvar persistedState = loadFromLocalStorage();\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(sagaMiddleware)));\nvar unsubscribe = store.subscribe(function () {\n  var state = store.getState();\n  saveToLocalStorage(state);\n});\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\n\nexport var persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/store/store.js"],"names":["applyMiddleware","compose","createStore","createSagaMiddleware","persistStore","rootReducer","rootSaga","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","store","unsubscribe","subscribe","getState","persistor","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,YAAtC;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,MAAI;AACA,QAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,eAAjC;AACH,GAHD,CAGC,OAAMK,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACF;;AAED,SAASG,oBAAT,GAAgC;AAC9B,MAAI;AACA,QAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAxB;AACA,QAAGT,eAAe,KAAK,IAAvB,EAA6B,OAAOU,SAAP;AAC7B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACH,GAJD,CAIC,OAAOK,CAAP,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOK,SAAP;AACH;AACF;;AAED,IAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AACF,IAAMK,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CvB,OAAxE;AAEA,IAAMwB,cAAc,GAAGtB,oBAAoB,EAA3C;AACA,IAAMuB,KAAK,GAAGxB,WAAW,CACrBG,WADqB,EAErBgB,cAFqB,EAGrBC,gBAAgB,CAACtB,eAAe,CAACyB,cAAD,CAAhB,CAHK,CAAzB;AAKA,IAAME,WAAW,GAAGD,KAAK,CAACE,SAAN,CAAgB,YAAM;AACtC,MAAMpB,KAAK,GAAGkB,KAAK,CAACG,QAAN,EAAd;AACAtB,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACD,CAHiB,CAApB;AAIA;;;;;AAIA,OAAO,IAAMsB,SAAS,GAAG1B,YAAY,CAACsB,KAAD,CAA9B;AAEPD,cAAc,CAACM,GAAf,CAAmBzB,QAAnB;AAEA,eAAeoB,KAAf","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport { rootReducer, rootSaga } from \"./rootDuck\";\r\n\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('personal', serializedState)\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n  }\r\n  \r\n  function loadFromLocalStorage() {\r\n    try {\r\n        const serializedState = localStorage.getItem('personal')\r\n        if(serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    }catch (e) {\r\n        console.log(e)\r\n        return undefined\r\n    }\r\n  }\r\n  \r\n  const persistedState = loadFromLocalStorage()\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\nconst unsubscribe = store.subscribe(() => {\r\n    const state = store.getState();\r\n    saveToLocalStorage(state);\r\n  });\r\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}