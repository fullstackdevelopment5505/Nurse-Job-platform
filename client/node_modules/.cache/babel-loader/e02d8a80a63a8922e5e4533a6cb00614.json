{"ast":null,"code":"var _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\app\\\\pages\\\\home\\\\docs\\\\I18nDocs.js\";\nimport React from \"react\";\nimport { Portlet, PortletBody, PortletHeader } from \"../../../partials/content/Portlet\";\nimport { CodeBlock } from \"../../../partials/content/CodeExample\";\nexport default function I18nDocs() {\n  return /*#__PURE__*/React.createElement(Portlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PortletHeader, {\n    title: \"Internationalization (i18n)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PortletBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"We're using \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  }, \"react-intl\"), \" for internationalization, check official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/formatjs/react-intl/blob/master/docs/Getting-Started.md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"documentation\"), \" \", \"and\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/formatjs/react-intl/tree/master/examples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"examples\"), \".\"), /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"how-to-add-a-new-language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"How to add a new language\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Note: if there are no locale data for your new language in\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"react-intl/locale-data\"), \" you will have to manually add locale data\")), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"This is example how to add Turkish language:\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Update \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }, \"src/app/partials/layout/LanguageSelector.js\")), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"diff\",\n    code: \"\\n                const languages = [\\n                  {\\n                    lang: \\\"en\\\",\\n                    name: \\\"English\\\",\\n                    flag: toAbsoluteUrl(\\\"/media/flags/012-uk.svg\\\")\\n                  },\\n                + {\\n                +   lang: \\\"tr\\\",\\n                +   name: \\\"Turkish\\\",\\n                +   flag: toAbsoluteUrl(\\\"/media/flags/006-turkey.svg\\\")\\n                + },\\n                {\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Add \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"src/_metronic/i18n/messages/tr.json\")), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"diff\",\n    code: \"\\n                + {\\n                +    \\\"TRANSLATOR.SELECT\\\": \\\"Dilinizi se\\xE7in\\\",\\n                +    \\\"MENU.NEW\\\": \\\"yeni\\\",\\n                +    \\\"MENU.ACTIONS\\\": \\\"Eylemler\\\",\\n                +    \\\"MENU.CREATE_POST\\\": \\\"Yeni G\\xF6nderi Olu\\u015Ftur\\\",\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Register messages and locale data in\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"src/_metronic/i18n/I18nProvider.js\")), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"diff\",\n    code: \"\\n                import * as ja from \\\"react-intl/locale-data/ja\\\";\\n                import * as zh from \\\"react-intl/locale-data/zh\\\";\\n                + import * as tr from \\\"react-intl/locale-data/tr\\\";\\n                \\n                import deMessages from \\\"./messages/de\\\";\\n                import enMessages from \\\"./messages/en\\\";\\n                import esMessages from \\\"./messages/es\\\";\\n                import frMessages from \\\"./messages/fr\\\";\\n                import jaMessages from \\\"./messages/ja\\\";\\n                import zhMessages from \\\"./messages/zh\\\";\\n                + import trMessages from \\\"./messages/tr\\\";\\n                \\n                const allMessages = {\\n                  de: deMessages,\\n                  en: enMessages,\\n                  es: esMessages,\\n                  fr: frMessages,\\n                  ja: jaMessages,\\n                  zh: zhMessages\\n                + tr: trMessages\\n                };\\n                \\n                - addLocaleData([...de, ...en, ...es, ...fr, ...ja, ...zh]);\\n                + addLocaleData([...de, ...en, ...es, ...fr, ...ja, ...zh, ...tr]);\\n                \\n                export default function I18nProvider({ children }) {\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"how-to-use\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"How to use\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"In the sample React app demo, the core parts like\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"left sided menu\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }, \"topbar horizontal menu\"), \", etc. are already implemented with the translation.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"The translator understands flat JSON object as defined in\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"src/_metronic/i18n/messages/en.json\"), \". This means that you can have a translation that looks like this:\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Add translation to \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 32\n    }\n  }, \"src/app/i18n/en.json\"), \":\", /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"json\",\n    code: \"\\n                {\\n                  \\\"HOME.HELLO\\\": \\\"Hello, {name}!\\\"\\n                }\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Format it with component:\"), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"jsx\",\n    code: \"\\n                import { FormattedMessage } from \\\"react-intl\\\";\\n                \\n                export default function Hello({ name }) {\\n                  return <FormattedMessage id=\\\"HOME.HELLO\\\" values={{ name }} />;\\n                }\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Or with hook:\"), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"jsx\",\n    code: \"\\n                import { useIntl } from \\\"react-intl\\\";\\n                \\n                export default function Hello({ name }) {\\n                  const intl = useIntl();\\n                \\n                  return <h3>{intl.formatMessage({ id: \\\"HOME.HELLO\\\" }, { name })}</h3>;\\n                }\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Or with HOC (Higher order component):\"), /*#__PURE__*/React.createElement(CodeBlock, {\n    language: \"jsx\",\n    code: \"\\n                import { injectIntl } from \\\"react-intl\\\";\\n                \\n                function Hello({ name, intl /* Prop injected with `injectIntl` */ }) {\\n                  return <h3>{intl.formatMessage({ id: \\\"HOME.HELLO\\\" }, { name })}</h3>;\\n                }\\n                \\n                export default injectIntl(Hello);\\n              \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/app/pages/home/docs/I18nDocs.js"],"names":["React","Portlet","PortletBody","PortletHeader","CodeBlock","I18nDocs"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Portlet,\r\n  PortletBody,\r\n  PortletHeader\r\n} from \"../../../partials/content/Portlet\";\r\nimport { CodeBlock } from \"../../../partials/content/CodeExample\";\r\n\r\nexport default function I18nDocs() {\r\n  return (\r\n    <Portlet>\r\n      <PortletHeader title=\"Internationalization (i18n)\" />\r\n      <PortletBody>\r\n        <h3 id=\"overview\">Overview</h3>\r\n        <p>\r\n          We're using <code>react-intl</code> for internationalization, check\r\n          official{\" \"}\r\n          <a href=\"https://github.com/formatjs/react-intl/blob/master/docs/Getting-Started.md\">\r\n            documentation\r\n          </a>{\" \"}\r\n          and{\" \"}\r\n          <a href=\"https://github.com/formatjs/react-intl/tree/master/examples\">\r\n            examples\r\n          </a>\r\n          .\r\n        </p>\r\n\r\n        <h3 id=\"how-to-add-a-new-language\">How to add a new language</h3>\r\n        <p>\r\n          <strong>\r\n            Note: if there are no locale data for your new language in{\" \"}\r\n            <code>react-intl/locale-data</code> you will have to manually add\r\n            locale data\r\n          </strong>\r\n        </p>\r\n\r\n        <h5>This is example how to add Turkish language:</h5>\r\n\r\n        <ol>\r\n          <li>\r\n            <p>\r\n              Update <code>src/app/partials/layout/LanguageSelector.js</code>\r\n            </p>\r\n\r\n            <CodeBlock\r\n              language=\"diff\"\r\n              code={`\r\n                const languages = [\r\n                  {\r\n                    lang: \"en\",\r\n                    name: \"English\",\r\n                    flag: toAbsoluteUrl(\"/media/flags/012-uk.svg\")\r\n                  },\r\n                + {\r\n                +   lang: \"tr\",\r\n                +   name: \"Turkish\",\r\n                +   flag: toAbsoluteUrl(\"/media/flags/006-turkey.svg\")\r\n                + },\r\n                {\r\n              `}\r\n            />\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Add <code>src/_metronic/i18n/messages/tr.json</code>\r\n            </p>\r\n\r\n            <CodeBlock\r\n              language=\"diff\"\r\n              code={`\r\n                + {\r\n                +    \"TRANSLATOR.SELECT\": \"Dilinizi seçin\",\r\n                +    \"MENU.NEW\": \"yeni\",\r\n                +    \"MENU.ACTIONS\": \"Eylemler\",\r\n                +    \"MENU.CREATE_POST\": \"Yeni Gönderi Oluştur\",\r\n              `}\r\n            />\r\n          </li>\r\n\r\n          <li>\r\n            <p>\r\n              Register messages and locale data in{\" \"}\r\n              <code>src/_metronic/i18n/I18nProvider.js</code>\r\n            </p>\r\n\r\n            <CodeBlock\r\n              language=\"diff\"\r\n              code={`\r\n                import * as ja from \"react-intl/locale-data/ja\";\r\n                import * as zh from \"react-intl/locale-data/zh\";\r\n                + import * as tr from \"react-intl/locale-data/tr\";\r\n                \r\n                import deMessages from \"./messages/de\";\r\n                import enMessages from \"./messages/en\";\r\n                import esMessages from \"./messages/es\";\r\n                import frMessages from \"./messages/fr\";\r\n                import jaMessages from \"./messages/ja\";\r\n                import zhMessages from \"./messages/zh\";\r\n                + import trMessages from \"./messages/tr\";\r\n                \r\n                const allMessages = {\r\n                  de: deMessages,\r\n                  en: enMessages,\r\n                  es: esMessages,\r\n                  fr: frMessages,\r\n                  ja: jaMessages,\r\n                  zh: zhMessages\r\n                + tr: trMessages\r\n                };\r\n                \r\n                - addLocaleData([...de, ...en, ...es, ...fr, ...ja, ...zh]);\r\n                + addLocaleData([...de, ...en, ...es, ...fr, ...ja, ...zh, ...tr]);\r\n                \r\n                export default function I18nProvider({ children }) {\r\n              `}\r\n            />\r\n          </li>\r\n        </ol>\r\n\r\n        <h4 id=\"how-to-use\">How to use</h4>\r\n\r\n        <p>\r\n          In the sample React app demo, the core parts like{\" \"}\r\n          <code>left sided menu</code>, <code>topbar horizontal menu</code>,\r\n          etc. are already implemented with the translation.\r\n        </p>\r\n        <p>\r\n          The translator understands flat JSON object as defined in{\" \"}\r\n          <code>src/_metronic/i18n/messages/en.json</code>. This means that you\r\n          can have a translation that looks like this:\r\n        </p>\r\n\r\n        <ol>\r\n          <li>\r\n            Add translation to <code>src/app/i18n/en.json</code>:\r\n            <CodeBlock\r\n              language=\"json\"\r\n              code={`\r\n                {\r\n                  \"HOME.HELLO\": \"Hello, {name}!\"\r\n                }\r\n              `}\r\n            />\r\n          </li>\r\n\r\n          <li>\r\n            <p>Format it with component:</p>\r\n            <CodeBlock\r\n              language=\"jsx\"\r\n              code={`\r\n                import { FormattedMessage } from \"react-intl\";\r\n                \r\n                export default function Hello({ name }) {\r\n                  return <FormattedMessage id=\"HOME.HELLO\" values={{ name }} />;\r\n                }\r\n              `}\r\n            />\r\n            <p>Or with hook:</p>\r\n            <CodeBlock\r\n              language=\"jsx\"\r\n              code={`\r\n                import { useIntl } from \"react-intl\";\r\n                \r\n                export default function Hello({ name }) {\r\n                  const intl = useIntl();\r\n                \r\n                  return <h3>{intl.formatMessage({ id: \"HOME.HELLO\" }, { name })}</h3>;\r\n                }\r\n              `}\r\n            />{\" \"}\r\n            <p>Or with HOC (Higher order component):</p>\r\n            <CodeBlock\r\n              language=\"jsx\"\r\n              code={`\r\n                import { injectIntl } from \"react-intl\";\r\n                \r\n                function Hello({ name, intl /* Prop injected with \\`injectIntl\\` */ }) {\r\n                  return <h3>{intl.formatMessage({ id: \"HOME.HELLO\" }, { name })}</h3>;\r\n                }\r\n                \r\n                export default injectIntl(Hello);\r\n              `}\r\n            />\r\n          </li>\r\n        </ol>\r\n      </PortletBody>\r\n    </Portlet>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}