{"ast":null,"code":"import _classCallCheck from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\_metronic\\\\layout\\\\header\\\\Header.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport objectPath from \"object-path\";\nimport Topbar from \"./Topbar\";\nimport HMenu from \"./HMenu/HMenu\";\nimport AnimateLoading from \"../../../app/partials/layout/AnimateLoading\";\nimport KTHeader from \"../../_assets/js/header\";\nimport * as builder from \"../../ducks/builder\";\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  var _super = _createSuper(Header);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.headerCommonRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var options = {};\n\n      if (this.headerCommonRef.current.getAttribute(\"data-ktheader-minimize\") === \"1\") {\n        options[\"minimize.desktop.on\"] = \"kt-header--minimize\";\n        options[\"offset.desktop\"] = 130;\n      } // eslint-disable-next-line no-undef\n\n\n      new KTHeader(this.headerCommonRef.current, options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          menuHeaderDisplay = _this$props.menuHeaderDisplay,\n          headerAttributes = _this$props.headerAttributes,\n          headerClasses = _this$props.headerClasses;\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"kt-header kt-grid__item \".concat(headerClasses),\n        id: \"kt_header\",\n        ref: this.headerCommonRef\n      }, headerAttributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(AnimateLoading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), menuHeaderDisplay && /*#__PURE__*/React.createElement(HMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }\n      }), !menuHeaderDisplay && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(Topbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    headerClasses: builder.selectors.getClasses(store, {\n      path: \"header\",\n      toString: true\n    }),\n    headerAttributes: builder.selectors.getAttributes(store, {\n      path: \"header\"\n    }),\n    menuHeaderDisplay: objectPath.get(store.builder.layoutConfig, \"header.menu.self.display\"),\n    fluid: objectPath.get(store.builder.layoutConfig, \"header.self.width\") === \"fluid\"\n  };\n};\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/_metronic/layout/header/Header.js"],"names":["React","connect","objectPath","Topbar","HMenu","AnimateLoading","KTHeader","builder","Header","headerCommonRef","createRef","options","current","getAttribute","props","menuHeaderDisplay","headerAttributes","headerClasses","Component","mapStateToProps","store","selectors","getClasses","path","toString","getAttributes","get","layoutConfig","fluid"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;IAEMC,M;;;;;;;;;;;;;;;UACJC,e,GAAkBT,KAAK,CAACU,SAAN,E;;;;;;wCAEE;AAClB,UAAIC,OAAO,GAAG,EAAd;;AACA,UACE,KAAKF,eAAL,CAAqBG,OAArB,CAA6BC,YAA7B,CAA0C,wBAA1C,MACA,GAFF,EAGE;AACAF,QAAAA,OAAO,CAAC,qBAAD,CAAP,GAAiC,qBAAjC;AACAA,QAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B,GAA5B;AACD,OARiB,CAUlB;;;AACA,UAAIL,QAAJ,CAAa,KAAKG,eAAL,CAAqBG,OAAlC,EAA2CD,OAA3C;AACD;;;6BAEQ;AAAA,wBAKH,KAAKG,KALF;AAAA,UAELC,iBAFK,eAELA,iBAFK;AAAA,UAGLC,gBAHK,eAGLA,gBAHK;AAAA,UAILC,aAJK,eAILA,aAJK;AAMP,0BACE;AACE,QAAA,SAAS,oCAA6BA,aAA7B,CADX;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,GAAG,EAAE,KAAKR;AAHZ,SAIMO,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAME,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQGD,iBAAiB,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARxB,EAYG,CAACA,iBAAD,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZzB,eAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF;AAkBD;;;;EAzCkBf,KAAK,CAACkB,S;;AA4C3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,aAAa,EAAEV,OAAO,CAACc,SAAR,CAAkBC,UAAlB,CAA6BF,KAA7B,EAAoC;AACjDG,MAAAA,IAAI,EAAE,QAD2C;AAEjDC,MAAAA,QAAQ,EAAE;AAFuC,KAApC,CADiB;AAKhCR,IAAAA,gBAAgB,EAAET,OAAO,CAACc,SAAR,CAAkBI,aAAlB,CAAgCL,KAAhC,EAAuC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAvC,CALc;AAMhCR,IAAAA,iBAAiB,EAAEb,UAAU,CAACwB,GAAX,CACjBN,KAAK,CAACb,OAAN,CAAcoB,YADG,EAEjB,0BAFiB,CANa;AAUhCC,IAAAA,KAAK,EACH1B,UAAU,CAACwB,GAAX,CAAeN,KAAK,CAACb,OAAN,CAAcoB,YAA7B,EAA2C,mBAA3C,MAAoE;AAXtC,GAAL;AAAA,CAA7B;;AAcA,eAAe1B,OAAO,CAACkB,eAAD,CAAP,CAAyBX,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport Topbar from \"./Topbar\";\r\nimport HMenu from \"./HMenu/HMenu\";\r\nimport AnimateLoading from \"../../../app/partials/layout/AnimateLoading\";\r\nimport KTHeader from \"../../_assets/js/header\";\r\nimport * as builder from \"../../ducks/builder\";\r\n\r\nclass Header extends React.Component {\r\n  headerCommonRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    let options = {};\r\n    if (\r\n      this.headerCommonRef.current.getAttribute(\"data-ktheader-minimize\") ===\r\n      \"1\"\r\n    ) {\r\n      options[\"minimize.desktop.on\"] = \"kt-header--minimize\";\r\n      options[\"offset.desktop\"] = 130;\r\n    }\r\n\r\n    // eslint-disable-next-line no-undef\r\n    new KTHeader(this.headerCommonRef.current, options);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      menuHeaderDisplay,\r\n      headerAttributes,\r\n      headerClasses\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className={`kt-header kt-grid__item ${headerClasses}`}\r\n        id=\"kt_header\"\r\n        ref={this.headerCommonRef}\r\n        {...headerAttributes}\r\n      >\r\n        <AnimateLoading />\r\n        {/* <!-- begin: Header Menu --> */}\r\n        {menuHeaderDisplay && <HMenu />}\r\n        {/* <!-- end: Header Menu --> */}\r\n        {/* <!-- begin:: Header Topbar --> */}\r\n        {/* <!-- empty div to fix topbar to stay on the right when menu-horizontal is hidden --> */}\r\n        {!menuHeaderDisplay && <div />}\r\n        <Topbar />\r\n        {/* <!-- end:: Header Topbar --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  headerClasses: builder.selectors.getClasses(store, {\r\n    path: \"header\",\r\n    toString: true\r\n  }),\r\n  headerAttributes: builder.selectors.getAttributes(store, { path: \"header\" }),\r\n  menuHeaderDisplay: objectPath.get(\r\n    store.builder.layoutConfig,\r\n    \"header.menu.self.display\"\r\n  ),\r\n  fluid:\r\n    objectPath.get(store.builder.layoutConfig, \"header.self.width\") === \"fluid\"\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}