{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Paste Work\\\\nurse\\\\nurse\\\\client\\\\src\\\\_metronic\\\\layout\\\\KtContent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport * as builder from \"../ducks/builder\";\n\nfunction KtContent(_ref) {\n  var children = _ref.children,\n      contentContainerClasses = _ref.contentContainerClasses;\n  var match = useRouteMatch() || {};\n  var animationEndClass = \"kt-grid--animateContent-finished\";\n\n  var _useState = useState([\"kt-grid--animateContent\", \"kt-container\", contentContainerClasses.split(\" \"), \"kt-grid__item kt-grid__item--fluid\", animationEndClass]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cssClassesState = _useState2[0],\n      setCssClassesState = _useState2[1];\n\n  useEffect(function () {\n    // for animation start should toggle 'kt-grid--animateContent-finished' css class\n    // TODO: change useMemo\n    var fullClasses = _toConsumableArray(cssClassesState);\n\n    var startAnimation = fullClasses.filter(function (el) {\n      return el !== animationEndClass;\n    });\n    setCssClassesState(startAnimation);\n    var timeOutId = setTimeout(function () {\n      setCssClassesState(fullClasses);\n    }, 200);\n    return function () {\n      clearTimeout(timeOutId);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [match.url]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClassesState.join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, children);\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    contentContainerClasses: builder.selectors.getClasses(store, {\n      path: \"content_container\",\n      toString: true\n    })\n  };\n};\n\nexport default connect(mapStateToProps)(KtContent);","map":{"version":3,"sources":["D:/Paste Work/nurse/nurse/client/src/_metronic/layout/KtContent.js"],"names":["React","useEffect","useState","connect","useRouteMatch","builder","KtContent","children","contentContainerClasses","match","animationEndClass","split","cssClassesState","setCssClassesState","fullClasses","startAnimation","filter","el","timeOutId","setTimeout","clearTimeout","url","join","mapStateToProps","store","selectors","getClasses","path","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAEA,SAASC,SAAT,OAA0D;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;AAAA,MAA3BC,uBAA2B,QAA3BA,uBAA2B;AACxD,MAAMC,KAAK,GAAGL,aAAa,MAAM,EAAjC;AACA,MAAMM,iBAAiB,GAAG,kCAA1B;;AAFwD,kBAGVR,QAAQ,CAAC,CACrD,yBADqD,EAErD,cAFqD,EAGrDM,uBAAuB,CAACG,KAAxB,CAA8B,GAA9B,CAHqD,EAIrD,oCAJqD,EAKrDD,iBALqD,CAAD,CAHE;AAAA;AAAA,MAGjDE,eAHiD;AAAA,MAGhCC,kBAHgC;;AAWxDZ,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAMa,WAAW,sBAAOF,eAAP,CAAjB;;AACA,QAAMG,cAAc,GAAGD,WAAW,CAACE,MAAZ,CAAmB,UAAAC,EAAE;AAAA,aAAIA,EAAE,KAAKP,iBAAX;AAAA,KAArB,CAAvB;AACAG,IAAAA,kBAAkB,CAACE,cAAD,CAAlB;AACA,QAAMG,SAAS,GAAGC,UAAU,CAAC,YAAM;AACjCN,MAAAA,kBAAkB,CAACC,WAAD,CAAlB;AACD,KAF2B,EAEzB,GAFyB,CAA5B;AAIA,WAAO,YAAM;AACXM,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACD,KAFD,CAVc,CAad;AACD,GAdQ,EAcN,CAACT,KAAK,CAACY,GAAP,CAdM,CAAT;AAgBA,sBAAO;AAAK,IAAA,SAAS,EAAET,eAAe,CAACU,IAAhB,CAAqB,GAArB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Cf,QAA5C,CAAP;AACD;;AAED,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChChB,IAAAA,uBAAuB,EAAEH,OAAO,CAACoB,SAAR,CAAkBC,UAAlB,CAA6BF,KAA7B,EAAoC;AAC3DG,MAAAA,IAAI,EAAE,mBADqD;AAE3DC,MAAAA,QAAQ,EAAE;AAFiD,KAApC;AADO,GAAL;AAAA,CAA7B;;AAOA,eAAezB,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,SAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport * as builder from \"../ducks/builder\";\r\n\r\nfunction KtContent({ children, contentContainerClasses }) {\r\n  const match = useRouteMatch() || {};\r\n  const animationEndClass = \"kt-grid--animateContent-finished\";\r\n  const [cssClassesState, setCssClassesState] = useState([\r\n    \"kt-grid--animateContent\",\r\n    \"kt-container\",\r\n    contentContainerClasses.split(\" \"),\r\n    \"kt-grid__item kt-grid__item--fluid\",\r\n    animationEndClass\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // for animation start should toggle 'kt-grid--animateContent-finished' css class\r\n    // TODO: change useMemo\r\n    const fullClasses = [...cssClassesState];\r\n    const startAnimation = fullClasses.filter(el => el !== animationEndClass);\r\n    setCssClassesState(startAnimation);\r\n    const timeOutId = setTimeout(() => {\r\n      setCssClassesState(fullClasses);\r\n    }, 200);\r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [match.url]);\r\n\r\n  return <div className={cssClassesState.join(\" \")}>{children}</div>;\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  contentContainerClasses: builder.selectors.getClasses(store, {\r\n    path: \"content_container\",\r\n    toString: true\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps)(KtContent);\r\n"]},"metadata":{},"sourceType":"module"}